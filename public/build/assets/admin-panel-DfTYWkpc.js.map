{"version":3,"file":"admin-panel-DfTYWkpc.js","sources":["../../../resources/js/admin/charts.js","../../../resources/js/admin/admin.js"],"sourcesContent":["// resources/js/ui/charts.js\r\n\r\n// Import Chart.js library if it's not globally available or bundled separately\r\n// Assuming Chart.js is loaded via a script tag in your HTML or bundled by Vite.\r\n// If you need to import it as a module, it would look something like:\r\n// import Chart from 'chart.js/auto';\r\n\r\nlet monthlySalesChartInstance;\r\n\r\n// Data for the monthly sales chart\r\nconst monthlySalesData = {\r\n    labels: ['فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\r\n    datasets: [{\r\n        label: 'میزان فروش',\r\n        data: [120, 190, 150, 220, 180, 250, 200, 280, 230, 300, 270, 350], // Sample data in millions\r\n        backgroundColor: 'rgba(56, 161, 105, 0.6)', // green-700 with opacity\r\n        borderColor: 'rgba(56, 161, 105, 1)', // green-700\r\n        borderWidth: 1,\r\n        fill: true,\r\n        tension: 0.3\r\n    }]\r\n};\r\n\r\nconst monthlySalesConfig = {\r\n    type: 'line',\r\n    data: monthlySalesData,\r\n    options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                labels: {\r\n                    font: {\r\n                        family: 'Vazirmatn' // Set font for legend\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                rtl: true, // Enable RTL for tooltips\r\n                callbacks: {\r\n                    label: function(context) {\r\n                        let label = context.dataset.label || '';\r\n                        if (label) {\r\n                            label += ': ';\r\n                        }\r\n                        if (context.parsed.y !== null) {\r\n                            label += context.parsed.y.toLocaleString('fa-IR') + ' میلیون تومان';\r\n                        }\r\n                        return label;\r\n                    }\r\n                },\r\n                titleFont: {\r\n                    family: 'Vazirmatn'\r\n                },\r\n                bodyFont: {\r\n                    family: 'Vazirmatn'\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n                title: {\r\n                    display: true,\r\n                    text: 'میزان فروش (میلیون تومان)',\r\n                    font: {\r\n                        family: 'Vazirmatn'\r\n                    }\r\n                },\r\n                ticks: {\r\n                    callback: function(value) {\r\n                        return value.toLocaleString('fa-IR');\r\n                    },\r\n                    font: {\r\n                        family: 'Vazirmatn'\r\n                    }\r\n                }\r\n            },\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'ماه',\r\n                    font: {\r\n                        family: 'Vazirmatn'\r\n                    }\r\n                },\r\n                ticks: {\r\n                    font: {\r\n                        family: 'Vazirmatn'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        layout: {\r\n            padding: {\r\n                left: 10,\r\n                right: 10,\r\n                top: 10,\r\n                bottom: 10\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Function to initialize the monthly sales chart.\r\n * این تابع نمودار فروش ماهانه را مقداردهی اولیه می‌کند.\r\n */\r\nexport function initializeMonthlySalesChart() {\r\n    const monthlySalesCtx = document.getElementById('monthlySalesChart');\r\n    if (monthlySalesCtx && typeof Chart !== 'undefined' && !monthlySalesChartInstance) { // Ensure Chart is defined\r\n        monthlySalesChartInstance = new Chart(monthlySalesCtx.getContext('2d'), monthlySalesConfig);\r\n        console.log('Monthly sales chart initialized.');\r\n    } else if (!monthlySalesCtx) {\r\n        console.warn('Canvas element with ID \"monthlySalesChart\" not found.');\r\n    } else if (monthlySalesChartInstance) {\r\n        console.log('Monthly sales chart already initialized.');\r\n    } else if (typeof Chart === 'undefined') {\r\n        console.error('Chart.js library is not loaded. Cannot initialize chart.');\r\n    }\r\n}\r\n\r\n/**\r\n * Function to update chart size (e.g., after sidebar toggle).\r\n * این تابع اندازه نمودار را به‌روزرسانی می‌کند (مثلاً پس از تغییر اندازه سایدبار).\r\n */\r\nexport function updateChartOnResize() {\r\n    if (monthlySalesChartInstance) {\r\n        monthlySalesChartInstance.resize();\r\n        console.log('Monthly sales chart resized.');\r\n    } else {\r\n        console.warn('Monthly sales chart instance not found for resize operation.');\r\n    }\r\n}\r\n\r\n/**\r\n * Main initialization function for the charts module.\r\n * این تابع اصلی راه‌اندازی ماژول نمودارها است.\r\n * app.js این تابع را به صورت داینامیک فراخوانی می‌کند.\r\n */\r\nexport function initCharts() {\r\n    console.log('Charts module initializing...');\r\n    // Initialize charts that are always present on the dashboard/admin reports page\r\n    initializeMonthlySalesChart();\r\n    // Add other chart initializations here if you have more charts in this module\r\n}\r\n","// resources/js/admin/admin.js\r\n\r\n// Import functions from other modules (assuming their new paths)\r\n// charts.js is in resources/js/admin/\r\nimport { initializeMonthlySalesChart, updateChartOnResize } from '../admin/charts.js';\r\nimport * as jalaali from 'jalaali-js'; // jalaali-js is usually from node_modules, so this path is fine\r\n\r\n// The hardcoded user array has been removed as requested.\r\n// The user list will now be initially empty and should be populated from a data source like an API.\r\nexport let users = []; // This should ideally be managed via an API call\r\n\r\nexport function renderActivityLog() {\r\n    const logContainer = document.getElementById('admin-activity-log');\r\n    if (!logContainer) return;\r\n\r\n    logContainer.innerHTML = '';\r\n    // adminActivityLog is now accessible via window.adminActivityLog\r\n    if (window.adminActivityLog) { // Ensure window.adminActivityLog exists\r\n        window.adminActivityLog.slice().reverse().forEach(log => {\r\n            const logEntry = document.createElement('div');\r\n            logEntry.className = 'p-2 bg-gray-50 rounded-md text-sm text-gray-700';\r\n            logEntry.innerHTML = `\r\n                <p><span class=\"font-semibold\">${log.username}</span>: ${log.action} - <span class=\"text-gray-500\">${new Date(log.timestamp).toLocaleString('fa-IR')}</span></p>\r\n                <span class=\"text-xs text-gray-400\">${log.details}</span>\r\n            `;\r\n            logContainer.appendChild(logEntry);\r\n        });\r\n    }\r\n}\r\n\r\n// window.showSection is defined in app.js, so we call it directly via window\r\n// window.showSection = function(sectionId) { ... }; // This definition is removed from here\r\n\r\nlet currentPage = 1;\r\nlet itemsPerPage = 5;\r\nlet currentSortColumn = 'id';\r\nlet currentSortDirection = 'asc';\r\nlet currentSearchQuery = '';\r\nlet selectedUserIds = new Set();\r\n\r\nasync function fetchUsers(page = currentPage, per_page = itemsPerPage, sort_by = currentSortColumn, sort_direction = currentSortDirection, search = currentSearchQuery) {\r\n    const loadingState = document.getElementById('loading-state');\r\n    const userListBody = document.getElementById('user-list-body');\r\n    const noUsersMessage = document.getElementById('no-users-message');\r\n\r\n    if (loadingState) loadingState.classList.remove('hidden');\r\n    if (userListBody) userListBody.innerHTML = '';\r\n    if (noUsersMessage) noUsersMessage.classList.add('hidden');\r\n\r\n    try {\r\n        // This is a simulation. In a real application, you would fetch users from an API.\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n        const filteredUsers = users.filter(user =>\r\n            user.username.toLowerCase().includes(search.toLowerCase()) ||\r\n            user.email.toLowerCase().includes(search.toLowerCase()) ||\r\n            user.role.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n\r\n        const sortedUsers = [...filteredUsers].sort((a, b) => {\r\n            let valA = a[sort_by];\r\n            let valB = b[sort_by];\r\n\r\n            if (sort_by === 'id') {\r\n                valA = parseInt(valA);\r\n                valB = parseInt(valB);\r\n            }\r\n            if (sort_by === 'created_at') {\r\n                valA = new Date(valA).getTime();\r\n                valB = new Date(valB).getTime();\r\n            }\r\n\r\n            if (valA < valB) return sort_direction === 'asc' ? -1 : 1;\r\n            if (valA > valB) return sort_direction === 'asc' ? 1 : -1;\r\n            return 0;\r\n        });\r\n\r\n        const totalUsers = sortedUsers.length;\r\n        const totalPages = Math.ceil(totalUsers / per_page);\r\n        const startIndex = (page - 1) * per_page;\r\n        const endIndex = startIndex + per_page;\r\n        const paginatedUsers = sortedUsers.slice(startIndex, endIndex);\r\n\r\n        currentPage = page;\r\n        currentSortColumn = sort_by;\r\n        currentSortDirection = sort_direction;\r\n        currentSearchQuery = search;\r\n\r\n        renderUserList(paginatedUsers);\r\n        renderPagination(totalPages, currentPage);\r\n        updateSelectedUsersCount();\r\n\r\n        if (paginatedUsers.length === 0 && noUsersMessage) {\r\n            noUsersMessage.classList.remove('hidden');\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n        window.showMessage('خطا در بارگذاری لیست کاربران.', 'error');\r\n        if (noUsersMessage) noUsersMessage.classList.remove('hidden');\r\n        if (userListBody) userListBody.innerHTML = `<tr><td colspan=\"9\" class=\"py-3 px-6 text-center text-red-500\">خطا در بارگذاری اطلاعات.</td></tr>`;\r\n    } finally {\r\n        if (loadingState) loadingState.classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction renderUserList(usersToRender) {\r\n    const userListBody = document.getElementById('user-list-body');\r\n    if (!userListBody) return;\r\n\r\n    userListBody.innerHTML = '';\r\n    selectedUserIds.clear();\r\n    const selectAllCheckbox = document.getElementById('select-all');\r\n    if (selectAllCheckbox) selectAllCheckbox.checked = false;\r\n    toggleBulkActionsVisibility();\r\n\r\n    if (usersToRender.length === 0) {\r\n        const noUsersMessage = document.getElementById('no-users-message');\r\n        if (noUsersMessage) {\r\n            noUsersMessage.classList.remove('hidden');\r\n        }\r\n        return;\r\n    } else {\r\n        const noUsersMessage = document.getElementById('no-users-message');\r\n        if (noUsersMessage) {\r\n            noUsersMessage.classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    usersToRender.forEach(user => {\r\n        const row = document.createElement('tr');\r\n        row.className = 'border-b border-gray-200 hover:bg-gray-50';\r\n\r\n        const createdAtDate = new Date(user.created_at);\r\n        const jalaliDate = jalaali.toJalaali(createdAtDate.getFullYear(), createdAtDate.getMonth() + 1, createdAtDate.getDate());\r\n        const formattedDate = `${jalaliDate.jy}/${String(jalaliDate.jm).padStart(2, '0')}/${String(jalaliDate.jd).padStart(2, '0')}`;\r\n\r\n        const statusClass = {\r\n            'active': 'bg-green-100 text-green-800',\r\n            'inactive': 'bg-red-100 text-red-800',\r\n            'suspended': 'bg-yellow-100 text-yellow-800'\r\n        }[user.status] || 'bg-gray-100 text-gray-800';\r\n\r\n        const roleClass = {\r\n            'admin': 'bg-red-100 text-red-800',\r\n            'user': 'bg-green-100 text-green-800',\r\n            'editor': 'bg-blue-100 text-blue-800',\r\n            'moderator': 'bg-purple-100 text-purple-800'\r\n        }[user.role] || 'bg-gray-100 text-gray-800';\r\n\r\n        row.innerHTML = `\r\n            <td class=\"py-3 px-6 text-right\">\r\n                <input type=\"checkbox\" class=\"user-checkbox rounded text-green-600 focus:ring-green-500\" data-user-id=\"${user.id}\">\r\n            </td>\r\n            <td class=\"py-3 px-6 text-right whitespace-nowrap\">${user.id}</td>\r\n            <td class=\"py-3 px-6 text-right whitespace-nowrap\">${user.username}</td>\r\n            <td class=\"py-3 px-6 text-right whitespace-nowrap\">${user.email}</td>\r\n            <td class=\"py-3 px-6 text-right whitespace-nowrap\">\r\n                <span class=\"px-2 py-1 font-semibold leading-tight rounded-full ${roleClass}\">\r\n                    ${user.role === 'admin' ? 'مدیر' : user.role === 'user' ? 'کاربر' : user.role === 'editor' ? 'ویرایشگر' : user.role === 'moderator' ? 'مدیر محتوا' : user.role}\r\n                </span>\r\n            </td>\r\n            <td class=\"py-3 px-6 text-right whitespace-nowrap\">${user.lastLocation}</td>\r\n            <td class=\"py-3 px-6 text-right whitespace-nowrap\">${formattedDate}</td>\r\n            <td class=\"py-3 px-6 text-right whitespace-nowrap\">\r\n                <span class=\"px-2 py-1 font-semibold leading-tight rounded-full ${statusClass}\">\r\n                    ${user.status === 'active' ? 'فعال' : user.status === 'inactive' ? 'غیرفعال' : user.status}\r\n                </span>\r\n            </td>\r\n            <td class=\"py-3 px-6 text-center whitespace-nowrap\">\r\n                <div class=\"flex item-center justify-center space-x-2 space-x-reverse\">\r\n                    <button class=\"w-8 h-8 rounded-full bg-blue-500 text-white flex items-center justify-center hover:bg-blue-600 transition duration-200 edit-user-btn\" data-user-id=\"${user.id}\" title=\"ویرایش\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                    </button>\r\n                    <button class=\"w-8 h-8 rounded-full bg-red-500 text-white flex items-center justify-center hover:bg-red-600 transition duration-200 delete-user-btn\" data-user-id=\"${user.id}\" title=\"حذف\">\r\n                        <i class=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        `;\r\n        userListBody.appendChild(row);\r\n    });\r\n\r\n    userListBody.querySelectorAll('.user-checkbox').forEach(checkbox => {\r\n        checkbox.addEventListener('change', handleUserCheckboxClick);\r\n    });\r\n\r\n    // Attach listeners for edit/delete buttons using event delegation\r\n    userListBody.querySelectorAll('.edit-user-btn').forEach(button => {\r\n        button.addEventListener('click', (event) => window.showUserModal(parseInt(event.currentTarget.dataset.userId)));\r\n    });\r\n    userListBody.querySelectorAll('.delete-user-btn').forEach(button => {\r\n        button.addEventListener('click', (event) => window.deleteUser(parseInt(event.currentTarget.dataset.userId)));\r\n    });\r\n}\r\n\r\nfunction renderPagination(totalPages, currentPage) {\r\n    const paginationContainer = document.getElementById('pagination-container');\r\n    if (!paginationContainer) return;\r\n\r\n    paginationContainer.innerHTML = '';\r\n\r\n    if (totalPages <= 1) return;\r\n\r\n    const prevButton = document.createElement('button');\r\n    prevButton.className = `px-3 py-1 rounded-md border border-gray-300 ${currentPage === 1 ? 'bg-gray-200 text-gray-500 cursor-not-allowed' : 'bg-white text-gray-700 hover:bg-gray-100'}`;\r\n    prevButton.innerHTML = `<i class=\"fas fa-chevron-right\"></i>`;\r\n    prevButton.disabled = currentPage === 1;\r\n    prevButton.addEventListener('click', () => fetchUsers(currentPage - 1));\r\n    paginationContainer.appendChild(prevButton);\r\n\r\n    const maxPagesToShow = 5;\r\n    let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\r\n    let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\r\n\r\n    if (endPage - startPage + 1 < maxPagesToShow) {\r\n        startPage = Math.max(1, endPage - maxPagesToShow + 1);\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n        const pageButton = document.createElement('button');\r\n        pageButton.className = `px-3 py-1 rounded-md border border-gray-300 mx-1 ${i === currentPage ? 'bg-brown-900 text-white' : 'bg-white text-gray-700 hover:bg-gray-100'}`;\r\n        pageButton.textContent = i.toLocaleString('fa-IR');\r\n        pageButton.addEventListener('click', () => fetchUsers(i));\r\n        paginationContainer.appendChild(pageButton);\r\n    }\r\n\r\n    const nextButton = document.createElement('button');\r\n    nextButton.className = `px-3 py-1 rounded-md border border-gray-300 ${currentPage === totalPages ? 'bg-gray-200 text-gray-500 cursor-not-allowed' : 'bg-white text-gray-700 hover:bg-gray-100'}`;\r\n    nextButton.innerHTML = `<i class=\"fas fa-chevron-left\"></i>`;\r\n    nextButton.disabled = currentPage === totalPages;\r\n    nextButton.addEventListener('click', () => fetchUsers(currentPage + 1));\r\n    paginationContainer.appendChild(nextButton);\r\n}\r\n\r\nwindow.showUserModal = function(userId = null) {\r\n    const modalOverlay = document.getElementById('user-modal-overlay');\r\n    const modalTitle = document.getElementById('user-modal-title');\r\n    const userIdInput = document.getElementById('user-id');\r\n    const usernameInput = document.getElementById('username');\r\n    const emailInput = document.getElementById('email');\r\n    const roleSelect = document.getElementById('role');\r\n    const statusSelect = document.getElementById('status');\r\n    const phoneInput = document.getElementById('phone');\r\n    const passwordInput = document.getElementById('password');\r\n    const passwordRequired = document.getElementById('password-required');\r\n    const passwordConfirmationInput = document.getElementById('password_confirmation');\r\n    const passwordConfirmRequired = document.getElementById('password-confirm-required');\r\n    const formMethodInput = document.getElementById('user-form-method');\r\n\r\n    // بررسی وجود elements ضروری\r\n    if (!modalOverlay || !modalTitle || !passwordInput || !passwordConfirmationInput) {\r\n        console.error('Required modal elements not found');\r\n        window.showMessage('خطا در بارگذاری فرم کاربر.', 'error');\r\n        return;\r\n    }\r\n\r\n    resetUserForm();\r\n\r\n    if (userId) {\r\n        const user = users.find(u => u.id === userId);\r\n        if (!user) {\r\n            window.showMessage('کاربر یافت نشد.', 'error');\r\n            return;\r\n        }\r\n\r\n        modalTitle.textContent = 'ویرایش کاربر';\r\n\r\n        // تنظیم مقادیر با بررسی وجود elements\r\n        if (userIdInput) userIdInput.value = user.id;\r\n        if (usernameInput) usernameInput.value = user.username;\r\n        if (emailInput) emailInput.value = user.email;\r\n        if (roleSelect) roleSelect.value = user.role;\r\n        if (statusSelect) statusSelect.value = user.status;\r\n        if (phoneInput) phoneInput.value = user.phone || '';\r\n\r\n        console.log('User ID exists. Setting password fields to not required.');\r\n\r\n        // اصلاح اصلی - بررسی وجود element قبل از تنظیم required\r\n        if (passwordInput) {\r\n            passwordInput.required = false;\r\n            console.log('passwordInput.required set to false.');\r\n        } else {\r\n            console.error('passwordInput element not found');\r\n        }\r\n\r\n        if (passwordConfirmationInput) {\r\n            passwordConfirmationInput.required = false;\r\n            console.log('passwordConfirmationInput.required set to false.');\r\n        } else {\r\n            console.error('passwordConfirmationInput element not found');\r\n        }\r\n\r\n        if (passwordRequired) {\r\n            console.log('passwordRequired element found. Hiding it.');\r\n            passwordRequired.classList.add('hidden');\r\n        } else {\r\n            console.log('passwordRequired element NOT found.');\r\n        }\r\n\r\n        if (passwordConfirmRequired) {\r\n            console.log('passwordConfirmRequired element found. Hiding it.');\r\n            passwordConfirmRequired.classList.add('hidden');\r\n        } else {\r\n            console.log('passwordConfirmRequired element NOT found.');\r\n        }\r\n\r\n        if (formMethodInput) formMethodInput.value = 'PUT';\r\n\r\n    } else {\r\n        modalTitle.textContent = 'افزودن کاربر جدید';\r\n        if (userIdInput) userIdInput.value = '';\r\n\r\n        console.log('New user. Setting password fields to required.');\r\n\r\n        // اصلاح اصلی - بررسی وجود element قبل از تنظیم required\r\n        if (passwordInput) {\r\n            console.log('Attempting to set passwordInput.required = true;');\r\n            passwordInput.required = true;\r\n            console.log('passwordInput.required set to true.');\r\n        } else {\r\n            console.error('passwordInput element not found');\r\n        }\r\n\r\n        if (passwordConfirmationInput) {\r\n            console.log('Attempting to set passwordConfirmationInput.required = true;');\r\n            passwordConfirmationInput.required = true;\r\n            console.log('passwordConfirmationInput.required set to true.');\r\n        } else {\r\n            console.error('passwordConfirmationInput element not found');\r\n        }\r\n\r\n        if (passwordRequired) {\r\n            console.log('passwordRequired element found. Showing it.');\r\n            passwordRequired.classList.remove('hidden');\r\n        } else {\r\n            console.log('passwordRequired element NOT found.');\r\n        }\r\n\r\n        if (passwordConfirmRequired) {\r\n            console.log('passwordConfirmRequired element found. Showing it.');\r\n            passwordConfirmRequired.classList.remove('hidden');\r\n        } else {\r\n            console.log('passwordConfirmRequired element NOT found.');\r\n        }\r\n\r\n        if (formMethodInput) formMethodInput.value = 'POST';\r\n    }\r\n\r\n    modalOverlay.classList.remove('hidden');\r\n    modalOverlay.classList.add('active');\r\n}\r\n\r\nfunction resetUserForm() {\r\n    const userForm = document.getElementById('user-form');\r\n    if (userForm) {\r\n        userForm.reset();\r\n        userForm.querySelectorAll('.invalid-feedback').forEach(el => el.classList.add('hidden'));\r\n        userForm.querySelectorAll('input, select').forEach(el => el.classList.remove('border-red-500'));\r\n        const formErrorsDiv = document.getElementById('form-errors');\r\n        if (formErrorsDiv) {\r\n            formErrorsDiv.classList.add('hidden');\r\n        }\r\n        const errorList = document.getElementById('error-list');\r\n        if (errorList) { // Fix applied here\r\n            errorList.innerHTML = '';\r\n        }\r\n    }\r\n}\r\n\r\nfunction validateUserForm(form) {\r\n    if (!form) {\r\n        console.error('Form element is null');\r\n        return false;\r\n    }\r\n\r\n    let isValid = true;\r\n    const errorList = document.getElementById('error-list');\r\n    const formErrorsDiv = document.getElementById('form-errors');\r\n\r\n    if (errorList) {\r\n        errorList.innerHTML = '';\r\n    }\r\n    if (formErrorsDiv) {\r\n        formErrorsDiv.classList.add('hidden');\r\n    }\r\n\r\n    // پاک کردن خطاهای قبلی با بررسی وجود elements\r\n    const invalidFeedbacks = form.querySelectorAll('.invalid-feedback');\r\n    invalidFeedbacks.forEach(el => {\r\n        if (el && el.classList) {\r\n            el.classList.add('hidden');\r\n        }\r\n    });\r\n\r\n    const formInputs = form.querySelectorAll('input, select');\r\n    formInputs.forEach(el => {\r\n        if (el && el.classList) {\r\n            el.classList.remove('border-red-500');\r\n        }\r\n    });\r\n\r\n    // بررسی وجود inputs\r\n    const usernameInput = document.getElementById('username');\r\n    const emailInput = document.getElementById('email');\r\n    const roleSelect = document.getElementById('role');\r\n    const passwordInput = document.getElementById('password');\r\n    const passwordConfirmationInput = document.getElementById('password_confirmation');\r\n    const phoneInput = document.getElementById('phone');\r\n\r\n    if (usernameInput && usernameInput.value.trim() === '') {\r\n        displayFieldError(usernameInput, 'نام کاربری نمی‌تواند خالی باشد.');\r\n        isValid = false;\r\n    }\r\n\r\n    if (emailInput && (emailInput.value.trim() === '' || !/\\S+@\\S+\\.\\S+/.test(emailInput.value))) {\r\n        displayFieldError(emailInput, 'ایمیل نامعتبر است.');\r\n        isValid = false;\r\n    }\r\n\r\n    if (roleSelect && roleSelect.value === '') {\r\n        displayFieldError(roleSelect, 'نقش کاربر را انتخاب کنید.');\r\n        isValid = false;\r\n    }\r\n\r\n    const userIdInput = document.getElementById('user-id');\r\n    const isNewUser = !userIdInput || !userIdInput.value;\r\n\r\n    if (passwordInput && passwordConfirmationInput) {\r\n        if (isNewUser || (passwordInput.value !== '' || passwordConfirmationInput.value !== '')) {\r\n            if (passwordInput.value.length < 8) {\r\n                displayFieldError(passwordInput, 'رمز عبور باید حداقل 8 کاراکتر باشد.');\r\n                isValid = false;\r\n            }\r\n            if (passwordInput.value !== passwordConfirmationInput.value) {\r\n                displayFieldError(passwordConfirmationInput, 'رمز عبور و تکرار آن مطابقت ندارند.');\r\n                isValid = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (phoneInput && phoneInput.value.trim() !== '' && !/^09\\d{9}$/.test(phoneInput.value)) {\r\n        displayFieldError(phoneInput, 'شماره تلفن نامعتبر است. (مثال: 09123456789)');\r\n        isValid = false;\r\n    }\r\n\r\n    if (!isValid && formErrorsDiv) {\r\n        formErrorsDiv.classList.remove('hidden');\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nfunction displayFieldError(inputElement, message) {\r\n    // بررسی وجود inputElement\r\n    if (!inputElement) {\r\n        console.error('inputElement is null or undefined');\r\n        return;\r\n    }\r\n\r\n    const errorDiv = inputElement.nextElementSibling;\r\n    if (errorDiv && errorDiv.classList.contains('invalid-feedback')) {\r\n        errorDiv.textContent = message;\r\n        errorDiv.classList.remove('hidden');\r\n    }\r\n\r\n    // اضافه کردن کلاس error با بررسی وجود classList\r\n    if (inputElement.classList) {\r\n        inputElement.classList.add('border-red-500');\r\n    }\r\n\r\n    const errorList = document.getElementById('error-list');\r\n    if (errorList) {\r\n        const li = document.createElement('li');\r\n        if (li) {\r\n            li.textContent = message;\r\n            errorList.appendChild(li);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nasync function handleUserFormSubmit(event) {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n\r\n    if (!validateUserForm(form)) {\r\n        window.showMessage('لطفاً خطاهای فرم را برطرف کنید.', 'error');\r\n        return;\r\n    }\r\n\r\n    // بررسی وجود elements قبل از استفاده\r\n    const userIdInput = document.getElementById('user-id');\r\n    const usernameInput = document.getElementById('username');\r\n    const emailInput = document.getElementById('email');\r\n    const roleSelect = document.getElementById('role');\r\n    const statusSelect = document.getElementById('status');\r\n    const phoneInput = document.getElementById('phone');\r\n    const passwordInput = document.getElementById('password');\r\n    const passwordConfirmInput = document.getElementById('password_confirmation');\r\n\r\n    if (!usernameInput || !emailInput || !roleSelect || !statusSelect) {\r\n        window.showMessage('خطا در بارگذاری فرم. لطفاً صفحه را reload کنید.', 'error');\r\n        return;\r\n    }\r\n\r\n    const userId = userIdInput ? userIdInput.value : '';\r\n    const username = usernameInput.value;\r\n    const email = emailInput.value;\r\n    const role = roleSelect.value;\r\n    const status = statusSelect.value;\r\n    const phone = phoneInput ? phoneInput.value : '';\r\n    const password = passwordInput ? passwordInput.value : '';\r\n\r\n    const userData = { username, email, role, status, phone };\r\n    if (password) {\r\n        userData.password = password;\r\n        if (passwordConfirmInput) {\r\n            userData.password_confirmation = passwordConfirmInput.value;\r\n        }\r\n    }\r\n\r\n    const submitBtn = document.getElementById('submit-btn');\r\n    if (!submitBtn) {\r\n        console.error('Submit button not found');\r\n        return;\r\n    }\r\n\r\n    const originalBtnText = submitBtn.innerHTML;\r\n\r\n    // اصلاح اصلی - بررسی وجود submitBtn قبل از تنظیم properties\r\n    if (submitBtn) {\r\n        submitBtn.disabled = true;\r\n        submitBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin ml-2\"></i><span>در حال ذخیره...</span>';\r\n    }\r\n\r\n\r\n    try {\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n        if (userId) {\r\n            const userIndex = users.findIndex(u => u.id === parseInt(userId));\r\n            if (userIndex !== -1) {\r\n                users[userIndex] = { ...users[userIndex], ...userData };\r\n                window.showMessage('کاربر با موفقیت ویرایش شد.', 'success');\r\n                window.logAdminAction(window.currentUser.username, 'ویرایش کاربر', `کاربر ${username} (شناسه: ${userId}) ویرایش شد.`);\r\n            } else {\r\n                window.showMessage('کاربر برای ویرایش یافت نشد.', 'error');\r\n            }\r\n        } else {\r\n            const newId = users.length > 0 ? Math.max(...users.map(u => u.id)) + 1 : 1;\r\n            const newUser = {\r\n                id: newId,\r\n                username: username,\r\n                email: email,\r\n                role: role,\r\n                lastLocation: 'N/A',\r\n                created_at: new Date().toISOString(),\r\n                status: status,\r\n                phone: phone\r\n            };\r\n            users.push(newUser);\r\n            window.showMessage('کاربر جدید با موفقیت اضافه شد.', 'success');\r\n            window.logAdminAction(window.currentUser.username, 'افزودن کاربر', `کاربر ${username} اضافه شد.`);\r\n        }\r\n\r\n        const userModalOverlay = document.getElementById('user-modal-overlay');\r\n        if (userModalOverlay) {\r\n            userModalOverlay.classList.add('hidden');\r\n            userModalOverlay.classList.remove('active');\r\n        }\r\n\r\n        fetchUsers();\r\n\r\n    } catch (error) {\r\n        console.error('Error saving user:', error);\r\n        window.showMessage('خطا در ذخیره کاربر: ' + error.message, 'error');\r\n    } finally {\r\n        // بررسی وجود submitBtn قبل از reset کردن\r\n        if (submitBtn) {\r\n            submitBtn.disabled = false;\r\n            submitBtn.innerHTML = originalBtnText;\r\n        }\r\n    }\r\n}\r\n\r\nwindow.deleteUser = function(userId) {\r\n    const userToDelete = users.find(u => u.id === userId);\r\n    if (!userToDelete) {\r\n        window.showMessage('کاربر یافت نشد.', 'error');\r\n        return;\r\n    }\r\n\r\n    // showConfirmationModal is now directly accessible via window\r\n    window.showConfirmationModal(\r\n        'تایید حذف کاربر',\r\n        `آیا از حذف کاربر \"${userToDelete.username}\" مطمئن هستید؟ این عملیات قابل بازگشت نیست.`,\r\n        async () => {\r\n            try {\r\n                await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n                const userIndex = users.findIndex(user => user.id === userId);\r\n\r\n                if (userIndex > -1) {\r\n                    users.splice(userIndex, 1);\r\n                    window.showMessage('کاربر با موفقیت حذف شد.', 'success');\r\n                    window.logAdminAction(window.currentUser.username, 'حذف کاربر', `کاربر ${userToDelete.username} (شناسه: ${userId}) حذف شد.`);\r\n                } else {\r\n                    window.showMessage('خطا در حذف کاربر. کاربر یافت نشد.', 'error');\r\n                }\r\n\r\n                fetchUsers(currentPage);\r\n            } catch (error) {\r\n                console.error('Error deleting user:', error);\r\n                window.showMessage('خطا در حذف کاربر: ' + error.message, 'error');\r\n            }\r\n        },\r\n        () => {\r\n            window.showMessage('عملیات حذف کاربر لغو شد.', 'info');\r\n        }\r\n    );\r\n};\r\n\r\nfunction toggleBulkActionsVisibility() {\r\n    const bulkActionsContainer = document.getElementById('bulk-actions');\r\n    if (bulkActionsContainer) {\r\n        if (selectedUserIds.size > 0) {\r\n            bulkActionsContainer.classList.remove('hidden');\r\n        } else {\r\n            bulkActionsContainer.classList.add('hidden');\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateSelectedUsersCount() {\r\n    const selectAllCheckbox = document.getElementById('select-all');\r\n    const userCheckboxes = document.querySelectorAll('.user-checkbox');\r\n\r\n    if (userCheckboxes.length > 0 && selectedUserIds.size === userCheckboxes.length && selectedUserIds.size > 0) {\r\n        if (selectAllCheckbox) selectAllCheckbox.checked = true;\r\n    } else {\r\n        if (selectAllCheckbox) selectAllCheckbox.checked = false;\r\n    }\r\n\r\n    toggleBulkActionsVisibility();\r\n}\r\n\r\nfunction handleSelectAllClick(event) {\r\n    const isChecked = event.target.checked;\r\n    document.querySelectorAll('.user-checkbox').forEach(checkbox => {\r\n        checkbox.checked = isChecked;\r\n        const userId = parseInt(checkbox.dataset.userId);\r\n        if (isChecked) {\r\n            selectedUserIds.add(userId);\r\n        } else {\r\n            selectedUserIds.delete(userId);\r\n        }\r\n    });\r\n    updateSelectedUsersCount();\r\n}\r\n\r\nfunction handleUserCheckboxClick(event) {\r\n    const userId = parseInt(event.target.dataset.userId);\r\n    if (event.target.checked) {\r\n        selectedUserIds.add(userId);\r\n    } else {\r\n        selectedUserIds.delete(userId);\r\n    }\r\n    updateSelectedUsersCount();\r\n}\r\n\r\nasync function handleBulkAction(actionType) {\r\n    if (selectedUserIds.size === 0) {\r\n        window.showMessage('هیچ کاربری انتخاب نشده است.', 'info');\r\n        return;\r\n    }\r\n\r\n    const usersToActOn = Array.from(selectedUserIds).map(id => users.find(u => u.id === id)).filter(Boolean);\r\n    const usernames = usersToActOn.map(u => u.username).join(', ');\r\n    let confirmMessage = '';\r\n    let successMessage = '';\r\n    let logAction = '';\r\n\r\n    if (actionType === 'delete') {\r\n        confirmMessage = `آیا از حذف ${selectedUserIds.size} کاربر انتخاب شده (${usernames}) مطمئن هستید؟ این عملیات قابل بازگشت نیست.`;\r\n        successMessage = 'کاربران انتخاب شده با موفقیت حذف شدند.';\r\n        logAction = 'حذف گروهی کاربران';\r\n    } else if (actionType === 'activate') {\r\n        confirmMessage = `آیا از فعال کردن ${selectedUserIds.size} کاربر انتخاب شده (${usernames}) مطمئن هستید؟`;\r\n        successMessage = 'کاربران انتخاب شده با موفقیت فعال شدند.';\r\n        logAction = 'فعال‌سازی گروهی کاربران';\r\n    } else if (actionType === 'deactivate') {\r\n        confirmMessage = `آیا از غیرفعال کردن ${selectedUserIds.size} کاربر انتخاب شده (${usernames}) مطمئن هستید؟`;\r\n        successMessage = 'کاربران انتخاب شده با موفقیت غیرفعال شدند.';\r\n        logAction = 'غیرفعال‌سازی گروهی کاربران';\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    // showConfirmationModal is now directly accessible via window\r\n    window.showConfirmationModal(\r\n        'تایید عملیات گروهی',\r\n        confirmMessage,\r\n        async () => {\r\n            try {\r\n                await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n                if (actionType === 'delete') {\r\n                    users = users.filter(user => !selectedUserIds.has(user.id));\r\n                } else {\r\n                    users.forEach(user => {\r\n                        if (selectedUserIds.has(user.id)) {\r\n                            if (actionType === 'activate') user.status = 'active';\r\n                            if (actionType === 'deactivate') user.status = 'inactive';\r\n                        }\r\n                    });\r\n                }\r\n\r\n                window.showMessage(successMessage, 'success');\r\n                window.logAdminAction(window.currentUser.username, logAction, `عملیات روی کاربران: ${usernames}`);\r\n                selectedUserIds.clear();\r\n                fetchUsers();\r\n            } catch (error) {\r\n                console.error('Error performing bulk action:', error);\r\n                window.showMessage('خطا در انجام عملیات گروهی: ' + error.message, 'error');\r\n            }\r\n        },\r\n        () => {\r\n            window.showMessage('عملیات گروهی لغو شد.', 'info');\r\n        }\r\n    );\r\n}\r\n\r\n// Main initialization function for the admin panel\r\nexport function initAdminPanel() {\r\n    console.log(\"Admin module initializing...\");\r\n\r\n    // Initial setup (previously in window.onload)\r\n    if (window.location.pathname.startsWith('/admin/')) {\r\n        window.showSection('dashboard'); // Assuming showSection is a global function from app.js\r\n        renderActivityLog();\r\n\r\n        const storedAdmin = users.find(u => u.username === window.currentUser.username);\r\n        if (storedAdmin) {\r\n            window.logAdminAction(window.currentUser.username, 'ورود به پنل', 'ورود موفق به سیستم');\r\n        } else {\r\n            window.showMessage('کاربر ادمین شبیه‌سازی شده یافت نشد. به عنوان کاربر پیش‌فرض عمل می‌کنیم.', 'info');\r\n        }\r\n    }\r\n\r\n    // Setup event listeners for the admin panel UI\r\n    const sidebarToggle = document.getElementById('sidebar-toggle');\r\n    const sidebar = document.getElementById('sidebar');\r\n    const mainContentWrapper = document.getElementById('main-content-wrapper');\r\n    const navTexts = document.querySelectorAll('.nav-text');\r\n\r\n    if (sidebarToggle && sidebar && mainContentWrapper && navTexts.length > 0) {\r\n        sidebarToggle.addEventListener('click', () => {\r\n            sidebar.classList.toggle('sidebar-expanded');\r\n            sidebar.classList.toggle('sidebar-collapsed');\r\n            mainContentWrapper.classList.toggle('main-content-shifted');\r\n            mainContentWrapper.classList.toggle('main-content-full');\r\n\r\n            navTexts.forEach(text => {\r\n                text.classList.toggle('hidden');\r\n            });\r\n\r\n            setTimeout(() => {\r\n                updateChartOnResize();\r\n            }, 300);\r\n        });\r\n    }\r\n\r\n    const notificationButton = document.getElementById('notification-button');\r\n    const notificationDropdown = document.getElementById('notification-dropdown');\r\n\r\n    if (notificationButton && notificationDropdown) {\r\n        notificationButton.addEventListener('click', (event) => {\r\n            notificationDropdown.classList.toggle('hidden');\r\n            event.stopPropagation();\r\n        });\r\n\r\n        document.addEventListener('click', (event) => {\r\n            if (!notificationDropdown.contains(event.target) && !notificationButton.contains(event.target)) {\r\n                notificationDropdown.classList.add('hidden');\r\n            }\r\n        });\r\n    }\r\n\r\n    const floatingReportToggle = document.getElementById('toggle-report-actions');\r\n    const reportActionsContainer = document.getElementById('report-actions-container');\r\n\r\n    if (floatingReportToggle && reportActionsContainer) {\r\n        floatingReportToggle.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            const isExpanded = floatingReportToggle.getAttribute('aria-expanded') === 'true';\r\n            floatingReportToggle.setAttribute('aria-expanded', String(!isExpanded));\r\n            reportActionsContainer.classList.toggle('hidden');\r\n            reportActionsContainer.classList.toggle('active');\r\n        });\r\n\r\n        document.addEventListener('click', (event) => {\r\n            if (!reportActionsContainer.contains(event.target) && !floatingReportToggle.contains(event.target)) {\r\n                reportActionsContainer.classList.add('hidden');\r\n                reportActionsContainer.classList.remove('active');\r\n                floatingReportToggle.setAttribute('aria-expanded', 'false');\r\n            }\r\n        });\r\n\r\n        reportActionsContainer.querySelectorAll('a').forEach(link => {\r\n            link.addEventListener('click', () => {\r\n                reportActionsContainer.classList.add('hidden');\r\n                reportActionsContainer.classList.remove('active');\r\n                floatingReportToggle.setAttribute('aria-expanded', 'false');\r\n            });\r\n        });\r\n    }\r\n\r\n    function updateClock() {\r\n        const now = new Date();\r\n        const options = {\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            hour12: false,\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric'\r\n        };\r\n        const timeElement = document.getElementById('current-time');\r\n        if (timeElement) {\r\n            timeElement.textContent = now.toLocaleString('fa-IR', options).replace(',', ' -');\r\n        }\r\n    }\r\n    setInterval(updateClock, 1000);\r\n    updateClock();\r\n\r\n    const userSearchInput = document.getElementById('user-search');\r\n    if (userSearchInput) {\r\n        let searchTimeout;\r\n        userSearchInput.addEventListener('keyup', () => {\r\n            clearTimeout(searchTimeout);\r\n            searchTimeout = setTimeout(() => {\r\n                fetchUsers(1, itemsPerPage, currentSortColumn, currentSortDirection, userSearchInput.value.trim());\r\n            }, 300);\r\n        });\r\n    }\r\n\r\n    document.querySelectorAll('#user-management-content th[data-sort]').forEach(header => {\r\n        header.addEventListener('click', () => {\r\n            const sortColumn = header.dataset.sort;\r\n            let sortDirection = 'asc';\r\n            if (currentSortColumn === sortColumn) {\r\n                sortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';\r\n            }\r\n            fetchUsers(1, itemsPerPage, sortColumn, sortDirection, currentSearchQuery);\r\n        });\r\n    });\r\n\r\n    const addUserButton = document.getElementById('add-user-btn');\r\n    if (addUserButton) {\r\n        addUserButton.addEventListener('click', () => window.showUserModal(null));\r\n    }\r\n\r\n    const userModalCloseBtn = document.getElementById('user-modal-close-btn');\r\n    const userFormCancelBtn = document.getElementById('user-form-cancel-btn');\r\n    const userModalOverlay = document.getElementById('user-modal-overlay');\r\n\r\n    if (userModalCloseBtn) {\r\n        userModalCloseBtn.addEventListener('click', () => {\r\n            userModalOverlay.classList.add('hidden');\r\n            userModalOverlay.classList.remove('active');\r\n        });\r\n    }\r\n    if (userFormCancelBtn) {\r\n        userFormCancelBtn.addEventListener('click', () => {\r\n            userModalOverlay.classList.add('hidden');\r\n            userModalOverlay.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    const userForm = document.getElementById('user-form');\r\n    if (userForm) {\r\n        userForm.addEventListener('submit', handleUserFormSubmit);\r\n    }\r\n\r\n    const selectAllCheckbox = document.getElementById('select-all');\r\n    if (selectAllCheckbox) {\r\n        selectAllCheckbox.addEventListener('change', handleSelectAllClick);\r\n    }\r\n\r\n    document.getElementById('bulk-delete')?.addEventListener('click', () => handleBulkAction('delete'));\r\n    document.getElementById('bulk-activate')?.addEventListener('click', () => handleBulkAction('activate'));\r\n    document.getElementById('bulk-deactivate')?.addEventListener('click', () => handleBulkAction('deactivate'));\r\n\r\n    console.log(\"Admin module initialized successfully.\");\r\n}\r\n\r\n// Export the initAdminPanel function so app.js can call it\r\n// The previous window.onload block is removed as app.js will handle the loading.\r\n"],"names":["monthlySalesChartInstance","monthlySalesData","monthlySalesConfig","context","label","value","initializeMonthlySalesChart","monthlySalesCtx","updateChartOnResize","initCharts","users","renderActivityLog","logContainer","log","logEntry","currentPage","itemsPerPage","currentSortColumn","currentSortDirection","currentSearchQuery","selectedUserIds","fetchUsers","page","per_page","sort_by","sort_direction","search","loadingState","userListBody","noUsersMessage","resolve","sortedUsers","user","a","b","valA","valB","totalUsers","totalPages","startIndex","endIndex","paginatedUsers","renderUserList","renderPagination","updateSelectedUsersCount","error","usersToRender","selectAllCheckbox","toggleBulkActionsVisibility","row","createdAtDate","jalaliDate","jalaali.toJalaali","formattedDate","statusClass","roleClass","checkbox","handleUserCheckboxClick","button","event","paginationContainer","prevButton","maxPagesToShow","startPage","endPage","i","pageButton","nextButton","userId","modalOverlay","modalTitle","userIdInput","usernameInput","emailInput","roleSelect","statusSelect","phoneInput","passwordInput","passwordRequired","passwordConfirmationInput","passwordConfirmRequired","formMethodInput","resetUserForm","u","userForm","el","formErrorsDiv","errorList","validateUserForm","form","isValid","displayFieldError","isNewUser","inputElement","message","errorDiv","li","handleUserFormSubmit","passwordConfirmInput","username","email","role","status","phone","password","userData","submitBtn","originalBtnText","userIndex","newUser","userModalOverlay","userToDelete","bulkActionsContainer","userCheckboxes","handleSelectAllClick","isChecked","handleBulkAction","actionType","usernames","id","confirmMessage","successMessage","logAction","initAdminPanel","sidebarToggle","sidebar","mainContentWrapper","navTexts","text","notificationButton","notificationDropdown","floatingReportToggle","reportActionsContainer","isExpanded","link","updateClock","now","options","timeElement","userSearchInput","searchTimeout","header","sortColumn","sortDirection","addUserButton","userModalCloseBtn","userFormCancelBtn","_a","_b","_c"],"mappings":"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"}