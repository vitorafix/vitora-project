{"version":3,"file":"auth-modules-Tx9inXK_.js","sources":["../../../resources/js/core/axiosInstance.js","../../../resources/js/auth/jwt_manager.js","../../../resources/js/core/api.js","../../../resources/js/auth/auth.js"],"sourcesContent":["// axiosInstance.js\r\nimport axios from 'axios';\r\n\r\n// ایجاد یک نمونه از axios با تنظیمات اولیه\r\nconst axiosInstance = axios.create({\r\n    baseURL: '/', // آدرس پایه درخواست‌ها (در صورت نیاز تنظیم شود)\r\n});\r\n\r\n// گرفتن JWT از localStorage\r\nconst jwtToken = localStorage.getItem('jwt_token');\r\n\r\n// افزودن هدر Authorization اگر JWT وجود دارد (این بخش فقط در زمان بارگذاری اولیه فایل اجرا می‌شود)\r\nif (jwtToken) {\r\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n}\r\n\r\n// اگر بخواهید برای همه درخواست‌ها بررسی کنید\r\naxiosInstance.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('jwt_token');\r\n    // --- شروع بخش اشکال‌زدایی ---\r\n    console.log('DEBUG: Axios Interceptor - Checking for JWT Token. Token found:', token ? 'Yes' : 'No');\r\n    if (token) {\r\n        console.log('DEBUG: Axios Interceptor - Setting Authorization header with token:', token.substring(0, 30) + '...'); // نمایش بخشی از توکن\r\n    }\r\n    // --- پایان بخش اشکال‌زدایی ---\r\n    if (token) {\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n        // اطمینان حاصل کنید که اگر توکن وجود ندارد، هدر Authorization حذف شود.\r\n        delete config.headers['Authorization'];\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axiosInstance;\r\n","// resources/js/jwt_manager.js\r\nconsole.log('jwt_manager.js loaded and starting...');\r\n\r\n/**\r\n * Stores the JWT token in localStorage.\r\n * توکن JWT را در localStorage ذخیره می‌کند.\r\n * @param {string} token The JWT token to store.\r\n */\r\nexport const storeJwtToken = (token) => {\r\n    localStorage.setItem('jwt_token', token);\r\n    console.log('JWT Manager: Token stored.');\r\n};\r\n\r\n/**\r\n * Retrieves the JWT token from localStorage.\r\n * توکن JWT را از localStorage بازیابی می‌کند.\r\n * @returns {string|null} The JWT token, or null if not found.\r\n */\r\nexport const getJwtToken = () => {\r\n    return localStorage.getItem('jwt_token');\r\n};\r\n\r\n/**\r\n * Clears the JWT token from localStorage.\r\n * توکن JWT را از localStorage حذف می‌کند.\r\n */\r\nexport const clearJwtToken = () => {\r\n    localStorage.removeItem('jwt_token');\r\n    console.log('JWT Manager: Token cleared.');\r\n};\r\n","// resources/js/core/api.js\r\nconsole.log('api.js loaded and starting...');\r\n\r\nimport axios from './axiosInstance.js'; // مسیر صحیح: axiosInstance.js در همین فولدر core است\r\n// تغییر: مسیر import برای jwt_manager.js به فولدر auth اصلاح شده است.\r\nimport { storeJwtToken, clearJwtToken, getJwtToken } from '../auth/jwt_manager.js';\r\n\r\n// Export JWT functions directly for use in auth.js\r\nexport { storeJwtToken, clearJwtToken, getJwtToken };\r\n\r\n// Variable to hold the promise of an active fetchCartContents request\r\n// This prevents sending multiple simultaneous requests.\r\nlet cartFetchPromise = null;\r\n\r\n/**\r\n * Sets the X-Guest-UUID header for all subsequent Axios requests.\r\n * This should be called once when the guestUuid is known (e.g., on CartManager initialization).\r\n * @param {string|null} guestUuid - The guest UUID to set. If null, the header will be removed.\r\n */\r\nexport const setGuestUuidHeader = (guestUuid) => {\r\n    if (guestUuid) {\r\n        axios.defaults.headers.common['X-Guest-UUID'] = guestUuid;\r\n        console.log('API: X-Guest-UUID header set globally to:', guestUuid);\r\n    } else {\r\n        delete axios.defaults.headers.common['X-Guest-UUID'];\r\n        console.log('API: X-Guest-UUID header removed globally.');\r\n    }\r\n};\r\n\r\n/**\r\n * Sends an OTP to the specified mobile number.\r\n * This function is primarily for the login flow (existing users).\r\n * It can also be used for registration flow if `isRegistrationAttempt` is true.\r\n *\r\n * @param {string} mobileNumber The mobile number to send OTP to.\r\n * @param {boolean} [isRegistrationAttempt=false] Indicates if this is a registration attempt.\r\n * @returns {Promise<object>} The API response data.\r\n */\r\nexport const sendOtp = async (mobileNumber, isRegistrationAttempt = false) => {\r\n    try {\r\n        const payload = {\r\n            mobile_number: mobileNumber\r\n        };\r\n        // Add is_registration flag to payload if it's a registration attempt\r\n        if (isRegistrationAttempt) {\r\n            payload.is_registration = true;\r\n        }\r\n\r\n        const response = await axios.post('/api/auth/send-otp', payload);\r\n        console.log('API: OTP sent successfully:', response.data);\r\n        return response.data; // This returns the raw response data, auth.js handles success/message\r\n    } catch (error) {\r\n        console.error('API: Error sending OTP:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n/**\r\n * Registers a new user and sends an OTP.\r\n * This function is specifically for the registration flow.\r\n * It calls the /api/auth/register endpoint which in turn calls requestOtpForRegister internally.\r\n *\r\n * @param {string} mobileNumber The mobile number for registration.\r\n * @param {string} name The user's first name.\r\n * @param {string} [lastname=''] The user's last name (optional).\r\n * @returns {Promise<object>} The API response data.\r\n */\r\nexport const registerUserAndSendOtp = async (mobileNumber, name, lastname = '') => {\r\n    try {\r\n        const response = await axios.post('/api/auth/register', {\r\n            mobile_number: mobileNumber,\r\n            name: name,\r\n            lastname: lastname\r\n        });\r\n        console.log('API: User registered and OTP sent successfully:', response.data);\r\n        return response.data; // This returns the raw response data, auth.js handles success/message\r\n    } catch (error) {\r\n        console.error('API: Error during registration and OTP send:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n/**\r\n * Requests OTP for registration flow (initial send or resend).\r\n * This function calls the dedicated registration OTP endpoint.\r\n *\r\n * @param {string} mobileNumber The mobile number to request OTP for.\r\n * @returns {Promise<object>} The API response data.\r\n */\r\nexport const requestOtpForRegister = async (mobileNumber) => {\r\n    try {\r\n        const response = await axios.post('/api/auth/register/request-otp', {\r\n            mobile_number: mobileNumber\r\n        });\r\n        console.log('API: OTP requested for registration successfully:', response.data);\r\n        return response.data; // This returns the raw response data, auth.js handles success/message\r\n    } catch (error) {\r\n        console.error('API: Error requesting OTP for registration:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Verifies the OTP and attempts to log in the user.\r\n *\r\n * @param {string} mobileNumber The mobile number.\r\n * @param {string} otp The OTP entered by the user.\r\n * @returns {Promise<object>} The API response data, including JWT token on success.\r\n */\r\nexport const verifyOtpAndLogin = async (mobileNumber, otp) => {\r\n    try {\r\n        // guestUuid is now handled by the global setGuestUuidHeader\r\n        const response = await axios.post('/api/auth/verify-otp', {\r\n            mobile_number: mobileNumber,\r\n            otp: otp\r\n        });\r\n\r\n        console.log('API: OTP verified and login successful:', response.data);\r\n\r\n        if (response.data.access_token) {\r\n            storeJwtToken(response.data.access_token);\r\n            // Optionally remove guest_uuid after successful login and cart merge\r\n            // This is handled by CartService in backend, but good to clear client-side too.\r\n            localStorage.removeItem('guest_uuid');\r\n            setGuestUuidHeader(null); // Clear the header after login/merge\r\n        }\r\n\r\n        return response.data; // This returns the raw response data, auth.js handles success/message\r\n    } catch (error) {\r\n        console.error('API: Error verifying OTP and logging in:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n/**\r\n * Logs out the currently authenticated user.\r\n * @returns {Promise<object>} The API response data.\r\n */\r\nexport const logoutUser = async () => {\r\n    try {\r\n        // Send API request to server to invalidate token/session\r\n        await axios.post('/api/auth/logout', {}, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt_token')\r\n            }\r\n        });\r\n\r\n        clearJwtToken(); // Clear JWT token from localStorage on logout\r\n        console.log('API: User logged out successfully.'); // Log message after clearing token\r\n\r\n        // Redirect to login page or home page after successful logout\r\n        window.location.href = '/'; // Redirect to the home page as requested\r\n    } catch (error) {\r\n        console.error('API: Error logging out:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n/**\r\n * Fetches cart contents for the current user or guest.\r\n * @returns {Promise<object>} The API response data.\r\n *\r\n * CHANGED: Implemented a robust caching mechanism to prevent multiple simultaneous requests.\r\n * CHANGED: Now resolves with `response.data` directly, assuming it contains `items` and `summary`.\r\n */\r\nexport const fetchCartContents = async () => {\r\n    // If a fetchCartContents request is already in progress, return the same Promise.\r\n    if (cartFetchPromise) {\r\n        console.warn('API: fetchCartContents request already in progress. Returning existing promise.');\r\n        return cartFetchPromise;\r\n    }\r\n\r\n    // Create a new Promise and store it in cartFetchPromise.\r\n    cartFetchPromise = new Promise(async (resolve, reject) => {\r\n        try {\r\n            console.log('API: Initiating new fetchCartContents request.');\r\n            const response = await axios.get('/api/cart/contents');\r\n            console.log('API: fetchCartContents response received:', response.data); // لاگ کردن پاسخ کامل\r\n            // Resolve directly with response.data, assuming it contains 'items' and 'summary'\r\n            resolve(response.data); // Removed { success: true, data: response.data, message: ... }\r\n        } catch (error) {\r\n            console.error('API: Error fetching cart contents:', error.response?.data || error.message);\r\n            reject({ success: false, message: error.response?.data?.message || 'خطا در دریافت محتویات سبد خرید.' });\r\n        } finally {\r\n            cartFetchPromise = null; // Reset the Promise after it settles (success or failure)\r\n        }\r\n    });\r\n    return cartFetchPromise;\r\n};\r\n\r\n/**\r\n * Adds a product to the cart.\r\n * @param {number} productId The ID of the product to add.\r\n * @param {number} quantity The quantity to add.\r\n * @param {number|null} productVariantId - شناسه واریانت محصول (اختیاری).\r\n * @returns {Promise<object>} The API response data with success flag and message.\r\n *\r\n * CHANGED: Ensured the response format includes 'success' and 'message' properties for consistency.\r\n */\r\nexport const addToCart = async (productId, quantity = 1, productVariantId = null) => {\r\n    try {\r\n        console.log(`API: Adding product ${productId} to cart with quantity ${quantity}.`);\r\n        const response = await axios.post(`/api/cart/add/${productId}`, {\r\n            quantity: quantity,\r\n            product_variant_id: productVariantId // Ensure variant ID is passed if available\r\n        });\r\n        console.log('API: Product added to cart:', response.data);\r\n        // Assuming backend response for add to cart is { success: true, message: \"...\" }\r\n        return { success: true, message: response.data.message || 'محصول با موفقیت به سبد خرید اضافه شد.', data: response.data };\r\n    } catch (error) {\r\n        console.error('API: Error adding to cart:', error.response?.data || error.message);\r\n        throw { success: false, message: error.response?.data?.message || 'خطا در افزودن محصول به سبد خرید.' };\r\n    }\r\n};\r\n\r\n/**\r\n * Updates the quantity of a product in the cart.\r\n * @param {string} cartItemId The ID of the cart item to update.\r\n * @param {number} quantity The new quantity.\r\n * @returns {Promise<object>} The API response data with success flag and message.\r\n *\r\n * CHANGED: Ensured the response format includes 'success' and 'message' properties for consistency.\r\n */\r\nexport const updateCartItemQuantity = async (cartItemId, quantity) => {\r\n    try {\r\n        console.log(`API: Updating cart item ${cartItemId} quantity to ${quantity}.`);\r\n        const response = await axios.put(`/api/cart/update/${cartItemId}`, {\r\n            quantity: quantity\r\n        });\r\n        console.log('API: Cart item quantity updated:', response.data);\r\n        return { success: true, message: response.data.message || 'تعداد محصول در سبد خرید به‌روز شد.', data: response.data };\r\n    } catch (error) {\r\n        console.error('API: Error updating cart item quantity:', error.response?.data || error.message);\r\n        throw { success: false, message: error.response?.data?.message || 'خطا در به‌روزرسانی تعداد محصول در سبد خرید.' };\r\n    }\r\n};\r\n\r\n/**\r\n * Removes a product from the cart.\r\n * @param {string} cartItemId The ID of the cart item to remove.\r\n * @returns {Promise<object>} The API response data with success flag and message.\r\n *\r\n * CHANGED: Ensured the response format includes 'success' and 'message' properties for consistency.\r\n */\r\nexport const removeCartItem = async (cartItemId) => {\r\n    try {\r\n        console.log(`API: Removing cart item ${cartItemId}.`);\r\n        const response = await axios.delete(`/api/cart/remove/${cartItemId}`);\r\n        console.log('API: Cart item removed:', response.data);\r\n        return { success: true, message: response.data.message || 'محصول از سبد خرید حذف شد.', data: response.data };\r\n    } catch (error) {\r\n        console.error('API: Error removing cart item:', error.response?.data || error.message);\r\n        throw { success: false, message: error.response?.data?.message || 'خطا در حذف محصول از سبد خرید.' };\r\n    }\r\n};\r\n\r\n/**\r\n * Clears all items from the cart.\r\n * @returns {Promise<object>} The API response data with success flag and message.\r\n *\r\n * CHANGED: Ensured the response format includes 'success' and 'message' properties for consistency.\r\n */\r\nexport const clearCart = async () => {\r\n    try {\r\n        console.log('API: Clearing cart.');\r\n        const response = await axios.post('/api/cart/clear', {});\r\n        console.log('API: Cart cleared:', response.data);\r\n        return { success: true, message: response.data.message || 'سبد خرید با موفقیت پاک شد.', data: response.data };\r\n    } catch (error) {\r\n        console.error('API: Error clearing cart:', error.response?.data || error.message);\r\n        throw { success: false, message: error.response?.data?.message || 'خطا در پاک کردن سبد خرید.' };\r\n    }\r\n};\r\n\r\n/**\r\n * Applies a coupon to the cart.\r\n * @param {string} couponCode The coupon code to apply.\r\n * @returns {Promise<object>} The API response data with success flag and message.\r\n *\r\n * CHANGED: Ensured the response format includes 'success' and 'message' properties for consistency.\r\n */\r\nexport const applyCoupon = async (couponCode) => {\r\n    try {\r\n        console.log(`API: Applying coupon code: ${couponCode}.`);\r\n        const response = await axios.post('/api/cart/apply-coupon', {\r\n            coupon_code: couponCode\r\n        });\r\n        console.log('API: Coupon applied successfully:', response.data);\r\n        return { success: true, message: response.data.message || 'کد تخفیف با موفقیت اعمال شد.', data: response.data };\r\n    } catch (error) {\r\n        console.error('API: Error applying coupon:', error.response?.data || error.message);\r\n        throw { success: false, message: error.response?.data?.message || 'خطا در اعمال کد تخفیف.' };\r\n    }\r\n};\r\n\r\n/**\r\n * Removes the applied coupon from the cart.\r\n * @returns {Promise<object>} The API response data with success flag and message.\r\n *\r\n * CHANGED: Ensured the response format includes 'success' and 'message' properties for consistency.\r\n */\r\nexport const removeCoupon = async () => {\r\n    try {\r\n        console.log('API: Removing coupon.');\r\n        const response = await axios.post('/api/cart/remove-coupon', {});\r\n        console.log('API: Coupon removed successfully:', response.data);\r\n        return { success: true, message: response.data.message || 'کد تخفیف با موفقیت حذف شد.', data: response.data };\r\n    } catch (error) {\r\n        console.error('API: Error removing coupon:', error.response?.data || error.message);\r\n        throw { success: false, message: error.response?.data?.message || 'خطا در حذف کد تخفیف.' };\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Fetches user data from the authenticated endpoint.\r\n * @returns {Promise<object>} The user data.\r\n */\r\nexport const fetchUserData = async () => {\r\n    try {\r\n        const response = await axios.get('/api/user');\r\n        console.log('API: User data fetched:', response.data);\r\n        return response.data; // This returns the raw response data, navbar_new.js handles success/message\r\n    } catch (error) {\r\n        console.error('API: Error fetching user data:', error.response?.data || error.message);\r\n        clearJwtToken(); // اگر توکن نامعتبر بود، آن را پاک کن\r\n        throw error;\r\n    }\r\n};\r\n","// resources/js/auth/auth.js\r\nconsole.log('auth.js loaded and starting...');\r\n\r\n// این فایل مسئول مدیریت احراز هویت کاربر، شامل ثبت نام، ورود و مدیریت OTP است.\r\n\r\n// ایمپورت کردن توابع مورد نیاز از ماژول‌های دیگر\r\n// توابع storeJwtToken و clearJwtToken از api.js ایمپورت می‌شوند.\r\n// تغییر: مسیرهای import به فولدرهای core و ui اصلاح شده‌اند.\r\nimport { sendOtp, verifyOtpAndLogin, logoutUser, storeJwtToken, clearJwtToken, getJwtToken, registerUserAndSendOtp, requestOtpForRegister } from \"../core/api.js\";\r\n// اضافه شدن registerUserAndSendOtp و requestOtpForRegister از api.js\r\nimport { updateNavbarUserStatus } from \"../ui/navbar_new.js\";\r\n// برای به‌روزرسانی وضعیت نوار ناوبری\r\n\r\n// تابع برای ذخیره guest_uuid در localStorage (این تابع مستقیماً با Axios ارتباط ندارد، پس نیازی به تغییر ندارد)\r\n// این توابع به app.js منتقل شده‌اند و در اینجا نیازی به تعریف مجدد نیست.\r\n/*\r\nfunction setGuestUuid(uuid) {\r\n    localStorage.setItem('guest_uuid', uuid);\r\n    console.log('Guest UUID set in localStorage:', uuid);\r\n}\r\n\r\n// تابع برای دریافت guest_uuid از localStorage (این تابع مستقیماً با Axios ارتباط ندارد، پس نیازی به تغییر ندارد)\r\nfunction getGuestUuid() {\r\n    return localStorage.getItem('guest_uuid');\r\n}\r\n*/\r\n\r\n// Function to convert Persian/Arabic digits to English and remove non-digits\r\n// This function is used for all three registration, login, and OTP verification forms.\r\nconst convertAndFilterDigits = (value) => {\r\n    const persianToEnglishMap = {\r\n        '۰': '0', '۱': '1', '۲': '2', '۳': '3', '۴': '4',\r\n        '۵': '5', '۶': '6', '۷': '7', '۸': '8', '۹': '9',\r\n        '٠': '0', '١': '1', '٢': '2', '٣': '3', '٤': '4',\r\n        '٥': '5', '٦': '6', '٧': '7', '٨': '8', '٩': '9'\r\n    };\r\n    let convertedValue = '';\r\n    for (let i = 0; i < value.length; i++) {\r\n        const char = value[i];\r\n        convertedValue += persianToEnglishMap[char] || char;\r\n    }\r\n    // Remove any non-digit characters after conversion\r\n    return convertedValue.replace(/\\D/g, '');\r\n};\r\n\r\n// Class to manage countdown timers (moved from verify-otp.blade.php)\r\nclass CountdownTimer {\r\n    constructor(element, initialSeconds, onCompleteCallback) {\r\n        this.element = element;\r\n        this.seconds = initialSeconds;\r\n        this.onCompleteCallback = onCompleteCallback;\r\n        this.interval = null;\r\n    }\r\n\r\n    start() {\r\n        this.stop();\r\n        // Ensure any existing timer is stopped\r\n        this.updateDisplay();\r\n        // Update immediately\r\n        this.interval = setInterval(() => {\r\n            this.seconds--;\r\n            this.updateDisplay();\r\n            if (this.seconds <= 0) {\r\n                this.stop();\r\n                this.onCompleteCallback?.();\r\n                // Call callback if provided\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.interval);\r\n        this.interval = null;\r\n    }\r\n\r\n    reset(newSeconds) {\r\n        this.stop();\r\n        this.seconds = newSeconds;\r\n        this.updateDisplay();\r\n    }\r\n\r\n    updateDisplay() {\r\n        const minutes = Math.floor(this.seconds / 60);\r\n        const seconds = this.seconds % 60;\r\n        this.element.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    }\r\n}\r\n\r\n// Function to clear OTP input fields and focus on the first one (moved from verify-otp.blade.php)\r\nconst clearOtpFields = () => {\r\n    const otpDigitInputs = document.querySelectorAll('.otp-digit-input');\r\n    otpDigitInputs.forEach(input => {\r\n        input.value = '';\r\n    });\r\n    if (otpDigitInputs.length > 0) {\r\n        otpDigitInputs[0].focus();\r\n        // Focus on the first field for convenience\r\n    }\r\n};\r\n\r\n// Function to get the combined OTP string from individual inputs (moved from verify-otp.blade.php)\r\nconst getCombinedOtp = () => {\r\n    const otpDigitInputs = document.querySelectorAll('.otp-digit-input');\r\n    let otp = '';\r\n    otpDigitInputs.forEach(input => {\r\n        otp += input.value;\r\n    });\r\n    return otp;\r\n};\r\n\r\n/**\r\n * Main initialization function for the authentication module.\r\n * این تابع اصلی راه‌اندازی ماژول احراز هویت است.\r\n * app.js این تابع را به صورت داینامیک فراخوانی می‌کند.\r\n */\r\nexport function initAuth() {\r\n    console.log('Auth module initializing...');\r\n\r\n    // --- Logic for the registration page (register.blade.php) ---\r\n    const registerNameInput = document.getElementById('name');\r\n    const registerLastnameInput = document.getElementById('lastname');\r\n    const registerMobileNumberInput = document.getElementById('mobile_number');\r\n    // This ID is common to both pages\r\n    const registerButton = document.getElementById('register-button');\r\n\r\n    if (registerNameInput && registerMobileNumberInput && registerButton) {\r\n        console.log('Auth.js: Register elements found. Initializing register logic.');\r\n\r\n        const registerButtonOriginalText = registerButton.innerHTML;\r\n        // Store original text\r\n\r\n        // Apply digit conversion and filtering to mobile number input for register form\r\n        registerMobileNumberInput.addEventListener('input', function(event) {\r\n            event.target.value = convertAndFilterDigits(event.target.value);\r\n        });\r\n\r\n        // Apply digit conversion and filtering to name and lastname inputs (if needed)\r\n        if (registerNameInput) {\r\n            registerNameInput.addEventListener('input', function(event) {\r\n                event.target.value = event.target.value.replace(/[^a-zA-Z\\u0600-\\u06FF\\s]/g, '');\r\n            });\r\n        }\r\n        if (registerLastnameInput) {\r\n            registerLastnameInput.addEventListener('input', function(event) {\r\n                event.target.value = event.target.value.replace(/[^a-zA-Z\\u0600-\\u06FF\\s]/g, '');\r\n            });\r\n        }\r\n\r\n        registerButton.addEventListener('click', async function() {\r\n            const name = registerNameInput.value;\r\n            const lastname = registerLastnameInput ? registerLastnameInput.value : '';\r\n            const mobileNumber = registerMobileNumberInput.value;\r\n\r\n            // Basic client-side validation\r\n            if (!name || name.trim() === '') {\r\n                window.showMessage('لطفاً نام خود را وارد کنید.', 'error');\r\n                return;\r\n            }\r\n            if (!mobileNumber || !/^09\\d{9}$/.test(mobileNumber)) {\r\n                window.showMessage('لطفاً یک شماره موبایل معتبر وارد کنید (مثال: 09123456789).', 'error');\r\n                return;\r\n            }\r\n\r\n            // Show loading state\r\n            registerButton.disabled = true;\r\n            registerButton.classList.add('opacity-50', 'cursor-not-allowed');\r\n            registerButton.innerHTML = '<i class=\"fas fa-spinner fa-spin ml-2\"></i> در حال ثبت‌نام...';\r\n\r\n            console.log('Auth.js: Register button clicked!');\r\n            // Debug log\r\n\r\n            try {\r\n                // NEW LOGIC: Call registerUserAndSendOtp for registration flow\r\n                // This will now internally call the /api/auth/register/request-otp endpoint\r\n                const response = await registerUserAndSendOtp(mobileNumber, name, lastname);\r\n\r\n                window.showMessage(response.message || 'ثبت‌نام با موفقیت انجام شد. کد تأیید ارسال شد.', 'success');\r\n\r\n                // For registration, we always redirect to verify-otp-form after sending OTP\r\n                window.location.href = `${window.location.origin}/auth/verify-otp-form?mobile_number=${mobileNumber}`;\r\n\r\n            } catch (error) {\r\n                const errorMessage = error.response?.data?.message || 'خطا در ثبت‌نام. لطفاً دوباره تلاش کنید.';\r\n                window.showMessage(errorMessage, 'error');\r\n                console.error('Auth.js: Error during registration:', error);\r\n            } finally {\r\n                // Hide loading state\r\n                registerButton.disabled = false;\r\n                registerButton.classList.remove('opacity-50', 'cursor-not-allowed');\r\n                registerButton.innerHTML = registerButtonOriginalText;\r\n            }\r\n        });\r\n    } else {\r\n        console.log('Auth.js: Register elements NOT found. Skipping register logic.');\r\n        console.log('Auth.js: registerNameInput:', registerNameInput);\r\n        console.log('Auth.js: registerMobileNumberInput:', registerMobileNumberInput);\r\n        console.log('Auth.js: registerButton:', registerButton);\r\n    }\r\n\r\n    // --- Logic for the login page (login.blade.php) ---\r\n    const loginMobileNumberInput = document.getElementById('mobile_number');\r\n    // This ID is common to both pages\r\n    const sendOtpButton = document.getElementById('send-otp-button');\r\n\r\n    if (loginMobileNumberInput && sendOtpButton) {\r\n        console.log('Auth.js: Login elements found. Initializing login logic.');\r\n\r\n        const sendOtpButtonOriginalText = sendOtpButton.innerHTML;\r\n        // Store original text\r\n\r\n        // Apply digit conversion and filtering to mobile number input for login form\r\n        loginMobileNumberInput.addEventListener('input', function(event) {\r\n            event.target.value = convertAndFilterDigits(event.target.value);\r\n        });\r\n\r\n        sendOtpButton.addEventListener('click', async function() {\r\n            const mobileNumber = loginMobileNumberInput.value;\r\n\r\n            // Basic client-side validation for mobile number format\r\n            if (!mobileNumber || !/^09\\d{9}$/.test(mobileNumber)) {\r\n                window.showMessage('لطفاً یک شماره موبایل معتبر وارد کنید (مثال: 09123456789).', 'error');\r\n                return;\r\n            }\r\n\r\n            // Show loading state\r\n            sendOtpButton.disabled = true;\r\n            sendOtpButton.classList.add('opacity-50', 'cursor-not-allowed');\r\n            sendOtpButton.innerHTML = '<i class=\"fas fa-spinner fa-spin ml-2\"></i> در حال ارسال...';\r\n\r\n            try {\r\n                const response = await sendOtp(mobileNumber); // This calls /api/auth/send-otp\r\n\r\n                window.showMessage(response.message || 'کد تأیید با موفقیت ارسال شد.', 'success');\r\n\r\n                // Check 'user_exists' flag from the backend response\r\n                // If user_exists is explicitly false, redirect to registration\r\n                if (response.user_exists === false) {\r\n                    console.log('Auth.js: User does not exist, redirecting to registration form.');\r\n                    window.location.href = `${window.location.origin}/auth/register?mobile_number=${mobileNumber}`;\r\n                } else {\r\n                    // User exists, redirect to OTP verification page\r\n                    console.log('Auth.js: User exists, redirecting to OTP verification form.');\r\n                    window.location.href = `${window.location.origin}/auth/verify-otp-form?mobile_number=${mobileNumber}`;\r\n                }\r\n\r\n            } catch (error) {\r\n                // Handle 404 specifically for 'requires_registration'\r\n                if (error.response && error.response.status === 404 && error.response.data.requires_registration) {\r\n                    // تغییر فقط در اینجا: پیام مستقیم و بدون ابهام، بدون ریدایرکت\r\n                    const customMessage = 'ارسال کد تأیید ناموفق بود: این شماره در سیستم ما ثبت نشده است.';\r\n                    window.showMessage(customMessage, 'error'); // نوع پیام را خطا قرار می‌دهیم\r\n                    console.log('Auth.js: Server indicated registration required. Not redirecting as per user request.');\r\n                    // REMOVED: window.location.href = `${window.location.origin}/auth/register?mobile_number=${mobileNumber}`;\r\n                } else {\r\n                    const errorMessage = error.response?.data?.message || 'خطا در ارسال کد تأیید. لطفاً دوباره تلاش کنید.';\r\n                    window.showMessage(errorMessage, 'error');\r\n                    console.error('Auth.js: Error sending OTP:', error);\r\n                }\r\n            } finally {\r\n                // Hide loading state\r\n                sendOtpButton.disabled = false;\r\n                sendOtpButton.classList.remove('opacity-50', 'cursor-not-allowed');\r\n                sendOtpButton.innerHTML = sendOtpButtonOriginalText;\r\n            }\r\n        });\r\n    } else {\r\n        console.log('Auth.js: Login elements NOT found. Skipping login logic.');\r\n        console.log('Auth.js: loginMobileNumberInput:', loginMobileNumberInput);\r\n        console.log('Auth.js: sendOtpButton:', sendOtpButton);\r\n    }\r\n\r\n    // --- Logic for the OTP verification page (verify-otp.blade.php) ---\r\n    const countdownTimerElement = document.getElementById('countdown-timer');\r\n    const resendButton = document.getElementById('resend-otp-button');\r\n    const resendTimerElement = resendButton ? resendButton.querySelector('#resend-timer') : null;\r\n    // Select the span inside the button\r\n    const otpDigitInputs = document.querySelectorAll('.otp-digit-input');\r\n    // Get all OTP digit inputs\r\n    const hiddenMobileNumberInput = document.getElementById('hidden-mobile-number');\r\n    const currentMobileNumberSpan = document.getElementById('current-mobile-number');\r\n\r\n    const changeMobileButton = document.getElementById('change-mobile-button');\r\n    const changeMobileModal = document.getElementById('change-mobile-modal');\r\n    const closeModalButton = document.getElementById('close-modal-button');\r\n    const newMobileInput = document.getElementById('new_mobile_number');\r\n    const sendNewOtpButton = document.getElementById('send-new-otp-button');\r\n    const modalErrorMessage = document.getElementById('modal-error-message');\r\n\r\n    let mainCountdownTimer;\r\n    let resendCooldownTimer;\r\n\r\n    // Only initialize OTP verification logic if elements are present\r\n    if (countdownTimerElement && resendButton && otpDigitInputs.length > 0 && hiddenMobileNumberInput) {\r\n        console.log('Auth.js: OTP verification elements found. Initializing OTP logic.');\r\n\r\n        const resendButtonOriginalText = resendButton.innerHTML;\r\n        // Store original text\r\n        const sendNewOtpButtonOriginalText = sendNewOtpButton ? sendNewOtpButton.innerHTML : '';\r\n        // Store original text\r\n\r\n        // Apply auto-focus/backspace/paste logic for OTP inputs\r\n        otpDigitInputs.forEach((input, index) => {\r\n            input.addEventListener('input', function(event) {\r\n                event.target.value = convertAndFilterDigits(event.target.value);\r\n\r\n                if (event.target.value.length === 1 && index < otpDigitInputs.length - 1) {\r\n                    otpDigitInputs[index + 1].focus();\r\n                }\r\n            });\r\n\r\n            input.addEventListener('keydown', function(event) {\r\n                if (event.key === 'Backspace' && event.target.value === '' && index > 0) {\r\n                    otpDigitInputs[index - 1].focus();\r\n                }\r\n            });\r\n\r\n            input.addEventListener('paste', function(event) {\r\n                event.preventDefault();\r\n                const pasteData = event.clipboardData.getData('text');\r\n                const cleanedData = convertAndFilterDigits(pasteData);\r\n\r\n                for (let i = 0; i < otpDigitInputs.length; i++) {\r\n                    if (i < cleanedData.length) {\r\n                        otpDigitInputs[i].value = cleanedData[i];\r\n                    } else {\r\n                        otpDigitInputs[i].value = '';\r\n                    }\r\n                }\r\n\r\n                const lastFilledIndex = Math.min(cleanedData.length - 1, otpDigitInputs.length - 1);\r\n                if (lastFilledIndex >= 0) {\r\n                    otpDigitInputs[lastFilledIndex].focus();\r\n                }\r\n            });\r\n        });\r\n\r\n        // Apply digit conversion and filtering to new mobile number input in modal\r\n        if (newMobileInput) {\r\n            newMobileInput.addEventListener('input', function(event) {\r\n                event.target.value = convertAndFilterDigits(event.target.value);\r\n            });\r\n        }\r\n\r\n        // Initialize main countdown timer\r\n        mainCountdownTimer = new CountdownTimer(countdownTimerElement, 120, () => {\r\n            resendButton.disabled = false;\r\n            resendButton.classList.remove('opacity-50', 'cursor-not-allowed');\r\n            resendButton.removeAttribute('aria-disabled');\r\n            if (resendTimerElement)\r\n                resendTimerElement.textContent = '';\r\n            // Clear timer text\r\n            resendButton.innerHTML = resendButtonOriginalText;\r\n            // Restore original text\r\n        });\r\n\r\n        // Initialize resend cooldown timer (initially not running)\r\n        resendCooldownTimer = new CountdownTimer(resendTimerElement, 120, () => {\r\n            resendButton.disabled = false;\r\n            resendButton.classList.remove('opacity-50', 'cursor-not-allowed');\r\n            resendButton.removeAttribute('aria-disabled');\r\n            if (resendTimerElement)\r\n                resendTimerElement.textContent = '';\r\n            // Clear timer text\r\n            resendButton.innerHTML = resendButtonOriginalText;\r\n            // Restore original text\r\n        });\r\n\r\n        // Update startCountdown function to use the new class\r\n        function startCountdown() {\r\n            mainCountdownTimer.reset(120);\r\n            mainCountdownTimer.start();\r\n            resendButton.disabled = true;\r\n            resendButton.classList.add('opacity-50', 'cursor-not-allowed');\r\n            resendButton.setAttribute('aria-disabled', 'true');\r\n            if (resendTimerElement)\r\n                resendTimerElement.textContent = '02:00';\r\n            // Reset resend timer display\r\n        }\r\n\r\n        // Update startResendCooldown function to use the new class\r\n        function startResendCooldown() {\r\n            resendCooldownTimer.reset(120);\r\n            resendCooldownTimer.start();\r\n            resendButton.disabled = true;\r\n            resendButton.classList.add('opacity-50', 'cursor-not-allowed');\r\n            resendButton.setAttribute('aria-disabled', 'true');\r\n        }\r\n\r\n        // --- Event Listeners for OTP verification page ---\r\n        const verifyOtpAjaxButton = document.getElementById('verify-otp-ajax-button');\r\n        if (verifyOtpAjaxButton) {\r\n            console.log('Auth.js: \"ثبت و ورود\" button (verify-otp-ajax-button) found!');\r\n            // Debug log\r\n            verifyOtpAjaxButton.addEventListener('click', async function() {\r\n                console.log('Auth.js: \"ثبت و ورود\" button clicked!');\r\n                // Debug log\r\n                const mobileNumber = hiddenMobileNumberInput.value;\r\n                const otp = getCombinedOtp();\r\n                console.log('Auth.js: Mobile Number for verification:', mobileNumber);\r\n                // Debug log\r\n                console.log('Auth.js: Combined OTP:', otp);\r\n                // Debug log\r\n\r\n                // Show loading state\r\n                verifyOtpAjaxButton.disabled = true;\r\n                verifyOtpAjaxButton.classList.add('opacity-50', 'cursor-not-allowed');\r\n                verifyOtpAjaxButton.innerHTML = '<i class=\"fas fa-spinner fa-spin ml-2\"></i> در حال بررسی...';\r\n\r\n                try {\r\n                    const data = await verifyOtpAndLogin(mobileNumber, otp);\r\n                    window.showMessage(data.message || 'ورود با موفقیت انجام شد.', 'success');\r\n                    console.log('Auth.js: User data after login:', data.user);\r\n                    // Correction: Token should be read from data.access_token\r\n                    console.log('Auth.js: JWT Token:', data.access_token);\r\n                    // Corrected here\r\n\r\n                    // --- تغییر کلیدی: فراخوانی jwtLogin برای لاگین در سشن وب لاراول ---\r\n                    if (data.access_token) {\r\n                        localStorage.setItem('jwt_token', data.access_token);\r\n                        // ذخیره توکن\r\n\r\n                        // فراخوانی API برای لاگین کردن کاربر در سشن وب لاراول\r\n                        try {\r\n                            // Assuming window.axios is available globally from bootstrap.js\r\n                            const jwtLoginResponse = await window.axios.post('/api/auth/jwt-login', {\r\n                                token: data.access_token\r\n                            });\r\n                            console.log('Auth.js: Web session login successful:', jwtLoginResponse.data);\r\n                        } catch (jwtLoginError) {\r\n                            console.error('Auth.js: Error during web session login (jwt-login API call):', jwtLoginError);\r\n                            // اگر لاگین سشن ناموفق بود، ممکن است بخواهید پیام خطای خاصی نمایش دهید\r\n                            window.showMessage('خطا در ورود به سشن وب. لطفاً دوباره تلاش کنید.', 'error');\r\n                        }\r\n                    }\r\n                    // --- پایان تغییر کلیدی ---\r\n\r\n                    // به‌روزرسانی وضعیت نوار ناوبری (باید پس از لاگین سشن انجام شود)\r\n                    updateNavbarUserStatus();\r\n\r\n                    // Redirect to dashboard or home page after successful login\r\n                    window.location.href = '/';\r\n                    // Or your dashboard route\r\n                } catch (error) {\r\n                    const errorMessage = error.response?.data?.message || 'خطا در ورود. لطفاً دوباره تلاش کنید.';\r\n                    window.showMessage(errorMessage, 'error');\r\n                    console.error('Auth.js: Error during OTP verification and login:', error);\r\n                    clearOtpFields();\r\n                    // Clear OTP fields on error\r\n                } finally {\r\n                    // Hide loading state\r\n                    verifyOtpAjaxButton.disabled = false;\r\n                    verifyOtpAjaxButton.classList.remove('opacity-50', 'cursor-not-allowed');\r\n                    verifyOtpAjaxButton.innerHTML = 'ثبت و ورود <i class=\"fas fa-sign-in-alt mr-2\"></i>';\r\n                }\r\n            });\r\n        } else {\r\n            console.log('Auth.js: \"ثبت و ورود\" button (verify-otp-ajax-button) NOT found!');\r\n            // Debug log\r\n        }\r\n\r\n        if (resendButton) {\r\n            resendButton.addEventListener('click', async function() {\r\n                const mobileNumber = this.dataset.mobileNumber;\r\n                if (!mobileNumber) {\r\n                    window.showMessage('شماره موبایل یافت نشد.', 'error');\r\n                    return;\r\n                }\r\n\r\n                // Show loading state\r\n                resendButton.disabled = true;\r\n                resendButton.classList.add('opacity-50', 'cursor-not-allowed');\r\n                resendButton.innerHTML = '<i class=\"fas fa-spinner fa-spin ml-2\"></i> در حال ارسال...';\r\n\r\n                try {\r\n                    // NEW LOGIC: Use requestOtpForRegister for resending OTP in registration flow\r\n                    const response = await requestOtpForRegister(mobileNumber);\r\n\r\n                    window.showMessage(response.message || 'کد تأیید مجدداً ارسال شد.', 'success');\r\n                    clearOtpFields();\r\n                    startCountdown();\r\n                    startResendCooldown();\r\n                } catch (error) {\r\n                    const errorMessage = error.response?.data?.message || 'خطا در ارسال مجدد کد.';\r\n                    window.showMessage(errorMessage, 'error');\r\n                    console.error('Auth.js: Error resending OTP:', error);\r\n                    clearOtpFields();\r\n                } finally {\r\n                    resendButton.disabled = false;\r\n                    resendButton.classList.remove('opacity-50', 'cursor-not-allowed');\r\n                    resendButton.innerHTML = resendButtonOriginalText;\r\n                }\r\n            });\r\n        }\r\n\r\n        // --- Change Mobile Modal Logic ---\r\n        if (changeMobileButton && changeMobileModal && closeModalButton && newMobileInput && sendNewOtpButton) {\r\n            changeMobileButton.addEventListener('click', function() {\r\n                changeMobileModal.classList.add('active');\r\n                modalErrorMessage.classList.add('hidden');\r\n                modalErrorMessage.classList.remove('animate-pulse');\r\n                newMobileInput.value = '';\r\n                clearOtpFields();\r\n            });\r\n\r\n            closeModalButton.addEventListener('click', function() {\r\n                changeMobileModal.classList.remove('active');\r\n            });\r\n\r\n            sendNewOtpButton.addEventListener('click', async function() {\r\n                const newMobileNumber = newMobileInput.value;\r\n\r\n                // Basic client-side validation for new mobile number format\r\n                if (!newMobileNumber || !/^09\\d{9}$/.test(newMobileNumber)) {\r\n                    modalErrorMessage.textContent = 'لطفاً یک شماره موبایل معتبر وارد کنید (مثال: 09123456789).';\r\n                    modalErrorMessage.classList.remove('hidden');\r\n                    modalErrorMessage.classList.add('animate-pulse');\r\n                    setTimeout(() => modalErrorMessage.classList.remove('animate-pulse'), 2000);\r\n                    return;\r\n                }\r\n\r\n                // Show loading state\r\n                sendNewOtpButton.disabled = true;\r\n                sendNewOtpButton.classList.add('opacity-50', 'cursor-not-allowed');\r\n                sendNewOtpButton.innerHTML = '<i class=\"fas fa-spinner fa-spin ml-2\"></i> در حال ارسال...';\r\n\r\n                try {\r\n                    // NEW LOGIC: Use requestOtpForRegister for sending OTP for new mobile number in change flow\r\n                    const response = await requestOtpForRegister(newMobileNumber);\r\n\r\n                    window.showMessage(response.message || 'شماره موبایل با موفقیت تغییر یافت. کد جدید ارسال شد.', 'success');\r\n                    hiddenMobileNumberInput.value = newMobileNumber;\r\n                    if (currentMobileNumberSpan)\r\n                        currentMobileNumberSpan.textContent = newMobileNumber;\r\n                    changeMobileModal.classList.remove('active');\r\n                    clearOtpFields();\r\n                    startCountdown();\r\n                    startResendCooldown();\r\n                } catch (error) {\r\n                    const errorMessage = error.response?.data?.message || 'خطا در تغییر شماره موبایل.';\r\n                    modalErrorMessage.textContent = errorMessage;\r\n                    modalErrorMessage.classList.remove('hidden');\r\n                    modalErrorMessage.classList.add('animate-pulse');\r\n                    setTimeout(() => modalErrorMessage.classList.remove('animate-pulse'), 2000);\r\n                    console.error('Auth.js: Error changing mobile number:', error);\r\n                    clearOtpFields();\r\n                } finally {\r\n                    sendNewOtpButton.disabled = false;\r\n                    sendNewOtpButton.classList.remove('opacity-50', 'cursor-not-allowed');\r\n                    sendNewOtpButton.innerHTML = sendNewOtpButtonOriginalText;\r\n                }\r\n            });\r\n        }\r\n\r\n        // Initial start of the countdown when the page loads\r\n        startCountdown();\r\n\r\n        // Clear OTP fields if there are validation errors on page load\r\n        const errorContainer = document.querySelector('.error-container');\r\n        if (errorContainer && !errorContainer.classList.contains('hidden')) {\r\n            clearOtpFields();\r\n        }\r\n    } else {\r\n        console.log('Auth.js: OTP verification elements NOT found. Skipping OTP logic.');\r\n        console.log('Auth.js: countdownTimerElement:', countdownTimerElement);\r\n        console.log('Auth.js: resendButton:', resendButton);\r\n        console.log('Auth.js: otpDigitInputs.length:', otpDigitInputs.length);\r\n        console.log('Auth.js: hiddenMobileNumberInput:', hiddenMobileNumberInput);\r\n    }\r\n}\r\n"],"names":["axiosInstance","axios","jwtToken","config","token","error","storeJwtToken","getJwtToken","clearJwtToken","cartFetchPromise","setGuestUuidHeader","guestUuid","sendOtp","mobileNumber","isRegistrationAttempt","payload","response","_a","registerUserAndSendOtp","name","lastname","requestOtpForRegister","verifyOtpAndLogin","otp","logoutUser","fetchCartContents","resolve","reject","_c","_b","addToCart","productId","quantity","productVariantId","updateCartItemQuantity","cartItemId","removeCartItem","clearCart","fetchUserData","convertAndFilterDigits","value","persianToEnglishMap","convertedValue","i","char","CountdownTimer","element","initialSeconds","onCompleteCallback","newSeconds","minutes","seconds","clearOtpFields","otpDigitInputs","input","getCombinedOtp","initAuth","registerNameInput","registerLastnameInput","registerMobileNumberInput","registerButton","registerButtonOriginalText","event","errorMessage","loginMobileNumberInput","sendOtpButton","sendOtpButtonOriginalText","countdownTimerElement","resendButton","resendTimerElement","hiddenMobileNumberInput","currentMobileNumberSpan","changeMobileButton","changeMobileModal","closeModalButton","newMobileInput","sendNewOtpButton","modalErrorMessage","mainCountdownTimer","resendCooldownTimer","startCountdown","startResendCooldown","resendButtonOriginalText","sendNewOtpButtonOriginalText","index","pasteData","cleanedData","lastFilledIndex","verifyOtpAjaxButton","data","jwtLoginResponse","jwtLoginError","updateNavbarUserStatus","newMobileNumber","errorContainer"],"mappings":"+FAIK,MAACA,EAAgBC,EAAM,OAAO,CAC/B,QAAS,GACb,CAAC,EAGKC,EAAW,aAAa,QAAQ,WAAW,EAG7CA,IACAF,EAAc,SAAS,QAAQ,OAAO,cAAmB,UAAUE,CAAQ,IAI/EF,EAAc,aAAa,QAAQ,IAAKG,GAAW,CAC/C,MAAMC,EAAQ,aAAa,QAAQ,WAAW,EAE9C,eAAQ,IAAI,kEAAmEA,EAAQ,MAAQ,IAAI,EAC/FA,GACA,QAAQ,IAAI,sEAAuEA,EAAM,UAAU,EAAG,EAAE,EAAI,KAAK,EAGjHA,EACAD,EAAO,QAAQ,cAAmB,UAAUC,CAAK,GAGjD,OAAOD,EAAO,QAAQ,cAEnBA,CACX,EAAIE,GACO,QAAQ,OAAOA,CAAK,CAC9B,ECjCD,QAAQ,IAAI,uCAAuC,EAO5C,MAAMC,EAAiBF,GAAU,CACpC,aAAa,QAAQ,YAAaA,CAAK,EACvC,QAAQ,IAAI,4BAA4B,CAC5C,EAOaG,EAAc,IAChB,aAAa,QAAQ,WAAW,EAO9BC,EAAgB,IAAM,CAC/B,aAAa,WAAW,WAAW,EACnC,QAAQ,IAAI,6BAA6B,CAC7C,6IC5BA,QAAQ,IAAI,+BAA+B,EAW3C,IAAIC,EAAmB,KAOhB,MAAMC,EAAsBC,GAAc,CAKzC,OAAOV,EAAM,SAAS,QAAQ,OAAO,cAAc,EACnD,QAAQ,IAAI,4CAA4C,CAEhE,EAWaW,EAAU,MAAOC,EAAcC,EAAwB,KAAU,OAC1E,GAAI,CACA,MAAMC,EAAU,CACZ,cAAeF,CAC3B,EAEYC,IACAC,EAAQ,gBAAkB,IAG9B,MAAMC,EAAW,MAAMf,EAAM,KAAK,qBAAsBc,CAAO,EAC/D,eAAQ,IAAI,8BAA+BC,EAAS,IAAI,EACjDA,EAAS,IACnB,OAAQX,EAAO,CACZ,cAAQ,MAAM,4BAA2BY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EACxEA,CACT,CACL,EAYaa,EAAyB,MAAOL,EAAcM,EAAMC,EAAW,KAAO,OAC/E,GAAI,CACA,MAAMJ,EAAW,MAAMf,EAAM,KAAK,qBAAsB,CACpD,cAAeY,EACf,KAAMM,EACN,SAAUC,CACtB,CAAS,EACD,eAAQ,IAAI,kDAAmDJ,EAAS,IAAI,EACrEA,EAAS,IACnB,OAAQX,EAAO,CACZ,cAAQ,MAAM,iDAAgDY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EAC7FA,CACT,CACL,EASagB,EAAwB,MAAOR,GAAiB,OACzD,GAAI,CACA,MAAMG,EAAW,MAAMf,EAAM,KAAK,iCAAkC,CAChE,cAAeY,CAC3B,CAAS,EACD,eAAQ,IAAI,oDAAqDG,EAAS,IAAI,EACvEA,EAAS,IACnB,OAAQX,EAAO,CACZ,cAAQ,MAAM,gDAA+CY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EAC5FA,CACT,CACL,EAUaiB,EAAoB,MAAOT,EAAcU,IAAQ,OAC1D,GAAI,CAEA,MAAMP,EAAW,MAAMf,EAAM,KAAK,uBAAwB,CACtD,cAAeY,EACf,IAAKU,CACjB,CAAS,EAED,eAAQ,IAAI,0CAA2CP,EAAS,IAAI,EAEhEA,EAAS,KAAK,eACdV,EAAcU,EAAS,KAAK,YAAY,EAGxC,aAAa,WAAW,YAAY,EACpCN,EAAmB,IAAI,GAGpBM,EAAS,IACnB,OAAQX,EAAO,CACZ,cAAQ,MAAM,6CAA4CY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EACzFA,CACT,CACL,EAMamB,GAAa,SAAY,OAClC,GAAI,CAEA,MAAMvB,EAAM,KAAK,mBAAoB,GAAI,CACrC,QAAS,CACL,cAAiB,UAAY,aAAa,QAAQ,WAAW,CAChE,CACb,CAAS,EAEDO,IACA,QAAQ,IAAI,oCAAoC,EAGhD,OAAO,SAAS,KAAO,GAC1B,OAAQH,EAAO,CACZ,cAAQ,MAAM,4BAA2BY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EACxEA,CACT,CACL,EASaoB,GAAoB,SAEzBhB,GACA,QAAQ,KAAK,iFAAiF,EACvFA,IAIXA,EAAmB,IAAI,QAAQ,MAAOiB,EAASC,IAAW,WACtD,GAAI,CACA,QAAQ,IAAI,gDAAgD,EAC5D,MAAMX,EAAW,MAAMf,EAAM,IAAI,oBAAoB,EACrD,QAAQ,IAAI,4CAA6Ce,EAAS,IAAI,EAEtEU,EAAQV,EAAS,IAAI,CACxB,OAAQX,EAAO,CACZ,QAAQ,MAAM,uCAAsCY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EACzFsB,EAAO,CAAE,QAAS,GAAO,UAASC,GAAAC,EAAAxB,EAAM,WAAN,YAAAwB,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,iCAAiC,CAAE,CAClH,QAAkB,CACNnB,EAAmB,IACtB,CACT,CAAK,EACMA,GAYEqB,GAAY,MAAOC,EAAWC,EAAW,EAAGC,EAAmB,OAAS,WACjF,GAAI,CACA,QAAQ,IAAI,uBAAuBF,CAAS,0BAA0BC,CAAQ,GAAG,EACjF,MAAMhB,EAAW,MAAMf,EAAM,KAAK,iBAAiB8B,CAAS,GAAI,CAC5D,SAAUC,EACV,mBAAoBC,CAChC,CAAS,EACD,eAAQ,IAAI,8BAA+BjB,EAAS,IAAI,EAEjD,CAAE,QAAS,GAAM,QAASA,EAAS,KAAK,SAAW,wCAAyC,KAAMA,EAAS,IAAI,CACzH,OAAQX,EAAO,CACZ,cAAQ,MAAM,+BAA8BY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EAC3E,CAAE,QAAS,GAAO,UAASuB,GAAAC,EAAAxB,EAAM,WAAN,YAAAwB,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,mCACrE,CACL,EAUaM,GAAyB,MAAOC,EAAYH,IAAa,WAClE,GAAI,CACA,QAAQ,IAAI,2BAA2BG,CAAU,gBAAgBH,CAAQ,GAAG,EAC5E,MAAMhB,EAAW,MAAMf,EAAM,IAAI,oBAAoBkC,CAAU,GAAI,CAC/D,SAAUH,CACtB,CAAS,EACD,eAAQ,IAAI,mCAAoChB,EAAS,IAAI,EACtD,CAAE,QAAS,GAAM,QAASA,EAAS,KAAK,SAAW,qCAAsC,KAAMA,EAAS,IAAI,CACtH,OAAQX,EAAO,CACZ,cAAQ,MAAM,4CAA2CY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EACxF,CAAE,QAAS,GAAO,UAASuB,GAAAC,EAAAxB,EAAM,WAAN,YAAAwB,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,8CACrE,CACL,EASaQ,GAAiB,MAAOD,GAAe,WAChD,GAAI,CACA,QAAQ,IAAI,2BAA2BA,CAAU,GAAG,EACpD,MAAMnB,EAAW,MAAMf,EAAM,OAAO,oBAAoBkC,CAAU,EAAE,EACpE,eAAQ,IAAI,0BAA2BnB,EAAS,IAAI,EAC7C,CAAE,QAAS,GAAM,QAASA,EAAS,KAAK,SAAW,4BAA6B,KAAMA,EAAS,IAAI,CAC7G,OAAQX,EAAO,CACZ,cAAQ,MAAM,mCAAkCY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EAC/E,CAAE,QAAS,GAAO,UAASuB,GAAAC,EAAAxB,EAAM,WAAN,YAAAwB,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,gCACrE,CACL,EAQaS,GAAY,SAAY,WACjC,GAAI,CACA,QAAQ,IAAI,qBAAqB,EACjC,MAAMrB,EAAW,MAAMf,EAAM,KAAK,kBAAmB,CAAE,CAAA,EACvD,eAAQ,IAAI,qBAAsBe,EAAS,IAAI,EACxC,CAAE,QAAS,GAAM,QAASA,EAAS,KAAK,SAAW,6BAA8B,KAAMA,EAAS,IAAI,CAC9G,OAAQX,EAAO,CACZ,cAAQ,MAAM,8BAA6BY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EAC1E,CAAE,QAAS,GAAO,UAASuB,GAAAC,EAAAxB,EAAM,WAAN,YAAAwB,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,4BACrE,CACL,EA8CaU,GAAgB,SAAY,OACrC,GAAI,CACA,MAAMtB,EAAW,MAAMf,EAAM,IAAI,WAAW,EAC5C,eAAQ,IAAI,0BAA2Be,EAAS,IAAI,EAC7CA,EAAS,IACnB,OAAQX,EAAO,CACZ,cAAQ,MAAM,mCAAkCY,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAQZ,EAAM,OAAO,EACrFG,IACMH,CACT,CACL,ECxUA,QAAQ,IAAI,gCAAgC,EA4B5C,MAAMkC,EAA0BC,GAAU,CACtC,MAAMC,EAAsB,CACxB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACrD,EACI,IAAIC,EAAiB,GACrB,QAASC,EAAI,EAAGA,EAAIH,EAAM,OAAQG,IAAK,CACnC,MAAMC,EAAOJ,EAAMG,CAAC,EACpBD,GAAkBD,EAAoBG,CAAI,GAAKA,CAClD,CAED,OAAOF,EAAe,QAAQ,MAAO,EAAE,CAC3C,EAGA,MAAMG,CAAe,CACjB,YAAYC,EAASC,EAAgBC,EAAoB,CACrD,KAAK,QAAUF,EACf,KAAK,QAAUC,EACf,KAAK,mBAAqBC,EAC1B,KAAK,SAAW,IACnB,CAED,OAAQ,CACJ,KAAK,KAAI,EAET,KAAK,cAAa,EAElB,KAAK,SAAW,YAAY,IAAM,OAC9B,KAAK,UACL,KAAK,cAAa,EACd,KAAK,SAAW,IAChB,KAAK,KAAI,GACT/B,EAAA,KAAK,qBAAL,MAAAA,EAAA,WAGP,EAAE,GAAI,CACV,CAED,MAAO,CACH,cAAc,KAAK,QAAQ,EAC3B,KAAK,SAAW,IACnB,CAED,MAAMgC,EAAY,CACd,KAAK,KAAI,EACT,KAAK,QAAUA,EACf,KAAK,cAAa,CACrB,CAED,eAAgB,CACZ,MAAMC,EAAU,KAAK,MAAM,KAAK,QAAU,EAAE,EACtCC,EAAU,KAAK,QAAU,GAC/B,KAAK,QAAQ,YAAc,GAAGD,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAAC,IAAIC,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CAAC,EAC3G,CACL,CAGA,MAAMC,EAAiB,IAAM,CACzB,MAAMC,EAAiB,SAAS,iBAAiB,kBAAkB,EACnEA,EAAe,QAAQC,GAAS,CAC5BA,EAAM,MAAQ,EACtB,CAAK,EACGD,EAAe,OAAS,GACxBA,EAAe,CAAC,EAAE,OAG1B,EAGME,EAAiB,IAAM,CACzB,MAAMF,EAAiB,SAAS,iBAAiB,kBAAkB,EACnE,IAAI9B,EAAM,GACV,OAAA8B,EAAe,QAAQC,GAAS,CAC5B/B,GAAO+B,EAAM,KACrB,CAAK,EACM/B,CACX,EAOO,SAASiC,GAAW,CACvB,QAAQ,IAAI,6BAA6B,EAGzC,MAAMC,EAAoB,SAAS,eAAe,MAAM,EAClDC,EAAwB,SAAS,eAAe,UAAU,EAC1DC,EAA4B,SAAS,eAAe,eAAe,EAEnEC,EAAiB,SAAS,eAAe,iBAAiB,EAEhE,GAAIH,GAAqBE,GAA6BC,EAAgB,CAClE,QAAQ,IAAI,gEAAgE,EAE5E,MAAMC,EAA6BD,EAAe,UAIlDD,EAA0B,iBAAiB,QAAS,SAASG,EAAO,CAChEA,EAAM,OAAO,MAAQvB,EAAuBuB,EAAM,OAAO,KAAK,CAC1E,CAAS,EAGGL,GACAA,EAAkB,iBAAiB,QAAS,SAASK,EAAO,CACxDA,EAAM,OAAO,MAAQA,EAAM,OAAO,MAAM,QAAQ,4BAA6B,EAAE,CAC/F,CAAa,EAEDJ,GACAA,EAAsB,iBAAiB,QAAS,SAASI,EAAO,CAC5DA,EAAM,OAAO,MAAQA,EAAM,OAAO,MAAM,QAAQ,4BAA6B,EAAE,CAC/F,CAAa,EAGLF,EAAe,iBAAiB,QAAS,gBAAiB,SACtD,MAAMzC,EAAOsC,EAAkB,MACzBrC,EAAWsC,EAAwBA,EAAsB,MAAQ,GACjE7C,EAAe8C,EAA0B,MAG/C,GAAI,CAACxC,GAAQA,EAAK,KAAI,IAAO,GAAI,CAC7B,OAAO,YAAY,8BAA+B,OAAO,EACzD,MACH,CACD,GAAI,CAACN,GAAgB,CAAC,YAAY,KAAKA,CAAY,EAAG,CAClD,OAAO,YAAY,6DAA8D,OAAO,EACxF,MACH,CAGD+C,EAAe,SAAW,GAC1BA,EAAe,UAAU,IAAI,aAAc,oBAAoB,EAC/DA,EAAe,UAAY,gEAE3B,QAAQ,IAAI,mCAAmC,EAG/C,GAAI,CAGA,MAAM5C,EAAW,MAAME,EAAuBL,EAAcM,EAAMC,CAAQ,EAE1E,OAAO,YAAYJ,EAAS,SAAW,iDAAkD,SAAS,EAGlG,OAAO,SAAS,KAAO,GAAG,OAAO,SAAS,MAAM,uCAAuCH,CAAY,EAEtG,OAAQR,EAAO,CACZ,MAAM0D,IAAelC,GAAAZ,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAhB,YAAAY,EAAsB,UAAW,0CACtD,OAAO,YAAYkC,EAAc,OAAO,EACxC,QAAQ,MAAM,sCAAuC1D,CAAK,CAC1E,QAAsB,CAENuD,EAAe,SAAW,GAC1BA,EAAe,UAAU,OAAO,aAAc,oBAAoB,EAClEA,EAAe,UAAYC,CAC9B,CACb,CAAS,CACT,MACQ,QAAQ,IAAI,gEAAgE,EAC5E,QAAQ,IAAI,8BAA+BJ,CAAiB,EAC5D,QAAQ,IAAI,sCAAuCE,CAAyB,EAC5E,QAAQ,IAAI,2BAA4BC,CAAc,EAI1D,MAAMI,EAAyB,SAAS,eAAe,eAAe,EAEhEC,EAAgB,SAAS,eAAe,iBAAiB,EAE/D,GAAID,GAA0BC,EAAe,CACzC,QAAQ,IAAI,0DAA0D,EAEtE,MAAMC,EAA4BD,EAAc,UAIhDD,EAAuB,iBAAiB,QAAS,SAASF,EAAO,CAC7DA,EAAM,OAAO,MAAQvB,EAAuBuB,EAAM,OAAO,KAAK,CAC1E,CAAS,EAEDG,EAAc,iBAAiB,QAAS,gBAAiB,SACrD,MAAMpD,EAAemD,EAAuB,MAG5C,GAAI,CAACnD,GAAgB,CAAC,YAAY,KAAKA,CAAY,EAAG,CAClD,OAAO,YAAY,6DAA8D,OAAO,EACxF,MACH,CAGDoD,EAAc,SAAW,GACzBA,EAAc,UAAU,IAAI,aAAc,oBAAoB,EAC9DA,EAAc,UAAY,8DAE1B,GAAI,CACA,MAAMjD,EAAW,MAAMJ,EAAQC,CAAY,EAE3C,OAAO,YAAYG,EAAS,SAAW,+BAAgC,SAAS,EAI5EA,EAAS,cAAgB,IACzB,QAAQ,IAAI,iEAAiE,EAC7E,OAAO,SAAS,KAAO,GAAG,OAAO,SAAS,MAAM,gCAAgCH,CAAY,KAG5F,QAAQ,IAAI,6DAA6D,EACzE,OAAO,SAAS,KAAO,GAAG,OAAO,SAAS,MAAM,uCAAuCA,CAAY,GAG1G,OAAQR,EAAO,CAEZ,GAAIA,EAAM,UAAYA,EAAM,SAAS,SAAW,KAAOA,EAAM,SAAS,KAAK,sBAGvE,OAAO,YADe,iEACY,OAAO,EACzC,QAAQ,IAAI,uFAAuF,MAEhG,CACH,MAAM0D,IAAelC,GAAAZ,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAhB,YAAAY,EAAsB,UAAW,iDACtD,OAAO,YAAYkC,EAAc,OAAO,EACxC,QAAQ,MAAM,8BAA+B1D,CAAK,CACrD,CACjB,QAAsB,CAEN4D,EAAc,SAAW,GACzBA,EAAc,UAAU,OAAO,aAAc,oBAAoB,EACjEA,EAAc,UAAYC,CAC7B,CACb,CAAS,CACT,MACQ,QAAQ,IAAI,0DAA0D,EACtE,QAAQ,IAAI,mCAAoCF,CAAsB,EACtE,QAAQ,IAAI,0BAA2BC,CAAa,EAIxD,MAAME,EAAwB,SAAS,eAAe,iBAAiB,EACjEC,EAAe,SAAS,eAAe,mBAAmB,EAC1DC,EAAqBD,EAAeA,EAAa,cAAc,eAAe,EAAI,KAElFf,EAAiB,SAAS,iBAAiB,kBAAkB,EAE7DiB,EAA0B,SAAS,eAAe,sBAAsB,EACxEC,EAA0B,SAAS,eAAe,uBAAuB,EAEzEC,EAAqB,SAAS,eAAe,sBAAsB,EACnEC,EAAoB,SAAS,eAAe,qBAAqB,EACjEC,EAAmB,SAAS,eAAe,oBAAoB,EAC/DC,EAAiB,SAAS,eAAe,mBAAmB,EAC5DC,EAAmB,SAAS,eAAe,qBAAqB,EAChEC,EAAoB,SAAS,eAAe,qBAAqB,EAEvE,IAAIC,EACAC,EAGJ,GAAIZ,GAAyBC,GAAgBf,EAAe,OAAS,GAAKiB,EAAyB,CA4E/F,IAASU,EAAT,UAA0B,CACtBF,EAAmB,MAAM,GAAG,EAC5BA,EAAmB,MAAK,EACxBV,EAAa,SAAW,GACxBA,EAAa,UAAU,IAAI,aAAc,oBAAoB,EAC7DA,EAAa,aAAa,gBAAiB,MAAM,EAC7CC,IACAA,EAAmB,YAAc,QAExC,EAGQY,EAAT,UAA+B,CAC3BF,EAAoB,MAAM,GAAG,EAC7BA,EAAoB,MAAK,EACzBX,EAAa,SAAW,GACxBA,EAAa,UAAU,IAAI,aAAc,oBAAoB,EAC7DA,EAAa,aAAa,gBAAiB,MAAM,CACpD,EA7FD,QAAQ,IAAI,mEAAmE,EAE/E,MAAMc,EAA2Bd,EAAa,UAExCe,EAA+BP,EAAmBA,EAAiB,UAAY,GAIrFvB,EAAe,QAAQ,CAACC,EAAO8B,IAAU,CACrC9B,EAAM,iBAAiB,QAAS,SAASQ,EAAO,CAC5CA,EAAM,OAAO,MAAQvB,EAAuBuB,EAAM,OAAO,KAAK,EAE1DA,EAAM,OAAO,MAAM,SAAW,GAAKsB,EAAQ/B,EAAe,OAAS,GACnEA,EAAe+B,EAAQ,CAAC,EAAE,MAAK,CAEnD,CAAa,EAED9B,EAAM,iBAAiB,UAAW,SAASQ,EAAO,CAC1CA,EAAM,MAAQ,aAAeA,EAAM,OAAO,QAAU,IAAMsB,EAAQ,GAClE/B,EAAe+B,EAAQ,CAAC,EAAE,MAAK,CAEnD,CAAa,EAED9B,EAAM,iBAAiB,QAAS,SAASQ,EAAO,CAC5CA,EAAM,eAAc,EACpB,MAAMuB,EAAYvB,EAAM,cAAc,QAAQ,MAAM,EAC9CwB,EAAc/C,EAAuB8C,CAAS,EAEpD,QAAS1C,EAAI,EAAGA,EAAIU,EAAe,OAAQV,IACnCA,EAAI2C,EAAY,OAChBjC,EAAeV,CAAC,EAAE,MAAQ2C,EAAY3C,CAAC,EAEvCU,EAAeV,CAAC,EAAE,MAAQ,GAIlC,MAAM4C,EAAkB,KAAK,IAAID,EAAY,OAAS,EAAGjC,EAAe,OAAS,CAAC,EAC9EkC,GAAmB,GACnBlC,EAAekC,CAAe,EAAE,OAEpD,CAAa,CACb,CAAS,EAGGZ,GACAA,EAAe,iBAAiB,QAAS,SAASb,EAAO,CACrDA,EAAM,OAAO,MAAQvB,EAAuBuB,EAAM,OAAO,KAAK,CAC9E,CAAa,EAILgB,EAAqB,IAAIjC,EAAesB,EAAuB,IAAK,IAAM,CACtEC,EAAa,SAAW,GACxBA,EAAa,UAAU,OAAO,aAAc,oBAAoB,EAChEA,EAAa,gBAAgB,eAAe,EACxCC,IACAA,EAAmB,YAAc,IAErCD,EAAa,UAAYc,CAErC,CAAS,EAGDH,EAAsB,IAAIlC,EAAewB,EAAoB,IAAK,IAAM,CACpED,EAAa,SAAW,GACxBA,EAAa,UAAU,OAAO,aAAc,oBAAoB,EAChEA,EAAa,gBAAgB,eAAe,EACxCC,IACAA,EAAmB,YAAc,IAErCD,EAAa,UAAYc,CAErC,CAAS,EAwBD,MAAMM,EAAsB,SAAS,eAAe,wBAAwB,EACxEA,GACA,QAAQ,IAAI,8DAA8D,EAE1EA,EAAoB,iBAAiB,QAAS,gBAAiB,SAC3D,QAAQ,IAAI,uCAAuC,EAEnD,MAAM3E,EAAeyD,EAAwB,MACvC/C,EAAMgC,IACZ,QAAQ,IAAI,2CAA4C1C,CAAY,EAEpE,QAAQ,IAAI,yBAA0BU,CAAG,EAIzCiE,EAAoB,SAAW,GAC/BA,EAAoB,UAAU,IAAI,aAAc,oBAAoB,EACpEA,EAAoB,UAAY,8DAEhC,GAAI,CACA,MAAMC,EAAO,MAAMnE,EAAkBT,EAAcU,CAAG,EAQtD,GAPA,OAAO,YAAYkE,EAAK,SAAW,2BAA4B,SAAS,EACxE,QAAQ,IAAI,kCAAmCA,EAAK,IAAI,EAExD,QAAQ,IAAI,sBAAuBA,EAAK,YAAY,EAIhDA,EAAK,aAAc,CACnB,aAAa,QAAQ,YAAaA,EAAK,YAAY,EAInD,GAAI,CAEA,MAAMC,EAAmB,MAAM,OAAO,MAAM,KAAK,sBAAuB,CACpE,MAAOD,EAAK,YAC5C,CAA6B,EACD,QAAQ,IAAI,yCAA0CC,EAAiB,IAAI,CAC9E,OAAQC,EAAe,CACpB,QAAQ,MAAM,gEAAiEA,CAAa,EAE5F,OAAO,YAAY,iDAAkD,OAAO,CAC/E,CACJ,CAIDC,IAGA,OAAO,SAAS,KAAO,GAE1B,OAAQvF,EAAO,CACZ,MAAM0D,IAAelC,GAAAZ,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAhB,YAAAY,EAAsB,UAAW,uCACtD,OAAO,YAAYkC,EAAc,OAAO,EACxC,QAAQ,MAAM,oDAAqD1D,CAAK,EACxE+C,GAEpB,QAA0B,CAENoC,EAAoB,SAAW,GAC/BA,EAAoB,UAAU,OAAO,aAAc,oBAAoB,EACvEA,EAAoB,UAAY,oDACnC,CACjB,CAAa,GAED,QAAQ,IAAI,kEAAkE,EAI9EpB,GACAA,EAAa,iBAAiB,QAAS,gBAAiB,SACpD,MAAMvD,EAAe,KAAK,QAAQ,aAClC,GAAI,CAACA,EAAc,CACf,OAAO,YAAY,yBAA0B,OAAO,EACpD,MACH,CAGDuD,EAAa,SAAW,GACxBA,EAAa,UAAU,IAAI,aAAc,oBAAoB,EAC7DA,EAAa,UAAY,8DAEzB,GAAI,CAEA,MAAMpD,EAAW,MAAMK,EAAsBR,CAAY,EAEzD,OAAO,YAAYG,EAAS,SAAW,4BAA6B,SAAS,EAC7EoC,IACA4B,IACAC,GACH,OAAQ5E,EAAO,CACZ,MAAM0D,IAAelC,GAAAZ,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAhB,YAAAY,EAAsB,UAAW,wBACtD,OAAO,YAAYkC,EAAc,OAAO,EACxC,QAAQ,MAAM,gCAAiC1D,CAAK,EACpD+C,GACpB,QAA0B,CACNgB,EAAa,SAAW,GACxBA,EAAa,UAAU,OAAO,aAAc,oBAAoB,EAChEA,EAAa,UAAYc,CAC5B,CACjB,CAAa,EAIDV,GAAsBC,GAAqBC,GAAoBC,GAAkBC,IACjFJ,EAAmB,iBAAiB,QAAS,UAAW,CACpDC,EAAkB,UAAU,IAAI,QAAQ,EACxCI,EAAkB,UAAU,IAAI,QAAQ,EACxCA,EAAkB,UAAU,OAAO,eAAe,EAClDF,EAAe,MAAQ,GACvBvB,GAChB,CAAa,EAEDsB,EAAiB,iBAAiB,QAAS,UAAW,CAClDD,EAAkB,UAAU,OAAO,QAAQ,CAC3D,CAAa,EAEDG,EAAiB,iBAAiB,QAAS,gBAAiB,SACxD,MAAMiB,EAAkBlB,EAAe,MAGvC,GAAI,CAACkB,GAAmB,CAAC,YAAY,KAAKA,CAAe,EAAG,CACxDhB,EAAkB,YAAc,6DAChCA,EAAkB,UAAU,OAAO,QAAQ,EAC3CA,EAAkB,UAAU,IAAI,eAAe,EAC/C,WAAW,IAAMA,EAAkB,UAAU,OAAO,eAAe,EAAG,GAAI,EAC1E,MACH,CAGDD,EAAiB,SAAW,GAC5BA,EAAiB,UAAU,IAAI,aAAc,oBAAoB,EACjEA,EAAiB,UAAY,8DAE7B,GAAI,CAEA,MAAM5D,EAAW,MAAMK,EAAsBwE,CAAe,EAE5D,OAAO,YAAY7E,EAAS,SAAW,uDAAwD,SAAS,EACxGsD,EAAwB,MAAQuB,EAC5BtB,IACAA,EAAwB,YAAcsB,GAC1CpB,EAAkB,UAAU,OAAO,QAAQ,EAC3CrB,IACA4B,IACAC,GACH,OAAQ5E,EAAO,CACZ,MAAM0D,IAAelC,GAAAZ,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,OAAhB,YAAAY,EAAsB,UAAW,6BACtDgD,EAAkB,YAAcd,EAChCc,EAAkB,UAAU,OAAO,QAAQ,EAC3CA,EAAkB,UAAU,IAAI,eAAe,EAC/C,WAAW,IAAMA,EAAkB,UAAU,OAAO,eAAe,EAAG,GAAI,EAC1E,QAAQ,MAAM,yCAA0CxE,CAAK,EAC7D+C,GACpB,QAA0B,CACNwB,EAAiB,SAAW,GAC5BA,EAAiB,UAAU,OAAO,aAAc,oBAAoB,EACpEA,EAAiB,UAAYO,CAChC,CACjB,CAAa,GAILH,IAGA,MAAMc,EAAiB,SAAS,cAAc,kBAAkB,EAC5DA,GAAkB,CAACA,EAAe,UAAU,SAAS,QAAQ,GAC7D1C,GAEZ,MACQ,QAAQ,IAAI,mEAAmE,EAC/E,QAAQ,IAAI,kCAAmCe,CAAqB,EACpE,QAAQ,IAAI,yBAA0BC,CAAY,EAClD,QAAQ,IAAI,kCAAmCf,EAAe,MAAM,EACpE,QAAQ,IAAI,oCAAqCiB,CAAuB,CAEhF"}