APP_NAME=Laravel
APP_ENV=local
APP_KEY=base64:qdPGmCMW73GtOtSyLV6imxUm6ljgB1kKa+BvxpszpX4=
APP_DEBUG=true
APP_URL=http://myshop.test:8080 # اطمینان حاصل کنید که APP_URL روی دامنه myshop.test تنظیم شده است
APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# --- شروع تنظیمات صحیح پایگاه داده MySQL ---
DB_CONNECTION=mysql
DB_HOST=mysql_db # 🟢 تغییر: نام سرویس MySQL در docker-compose.yml
DB_PORT=3306
DB_DATABASE=myshop_db
DB_USERNAME=ariyadel12
DB_PASSWORD=6Z7MT=fe%tr%zcE9
# --- پایان تنظیمات صحیح پایگاه داده MySQL ---

# --- تنظیمات جدید MySQL برای Docker Compose ---
MYSQL_ROOT_PASSWORD=6Z7MT=fe%tr%zcE9
MYSQL_DATABASE=myshop_db
MYSQL_USER=ariyadel12
MYSQL_PASSWORD=6Z7MT=fe%tr%zcE9
# --- پایان تنظیمات جدید MySQL برای Docker Compose ---

# --- تنظیمات MongoDB اضافه‌شده و هماهنگ شده ---
MONGODB_CONNECTION=mongodb
MONGODB_HOST=mongo_db # نام سرویس MongoDB در docker-compose.yml
MONGODB_PORT=27017
MONGODB_DATABASE=analytics_db # نام دیتابیس برای لاگ‌ها (مطابق با docker-compose.yml)
MONGODB_USERNAME=ariyadel12
MONGODB_PASSWORD=6Z7MT=fe%tr%zcE9
MONGODB_AUTH_SOURCE=admin # دیتابیس احراز هویت (معمولا admin)
MONGODB_SSL=false # تنظیم SSL برای MongoDB

SESSION_DRIVER=redis
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=myshop.test # دامنه سشن را روی myshop.test تنظیم کنید
SESSION_SECURE_COOKIE=false # برای محیط HTTP توسعه، این را false نگه دارید
SESSION_HTTP_ONLY=true
SESSION_SAME_SITE=Lax # به Lax برگردانید، زیرا دیگر Cross-Origin نیستیم


BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=redis

CACHE_DRIVER=redis
CACHE_STORE=
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=predis
REDIS_HOST=redis_cache
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS=
MAIL_FROM_NAME=

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"

# --- تنظیمات Sanctum Stateful Domains ---
# این خط برای فعال کردن احراز هویت مبتنی بر سشن با Sanctum حیاتی است.
# آن را روی دامنه ای که به آن دسترسی دارید (myshop.test) تنظیم کنید.
SANCTUM_STATEFUL_DOMAINS="myshop.test"


# --- تنظیمات ملی پیامک ---
MELIPAYAMAK_USERNAME=
MELIPAYAPAK_PASSWORD=
MELIPAYAMAK_FROM_NUMBER=
MELIPAYAMAK_OTP_PATTERN_CODE=

# تنظیمات اصلی
IMAGE_MAX_WIDTH=1024
IMAGE_MAX_HEIGHT=768
IMAGE_QUALITY=90
IMAGE_MAX_SIZE=3145728
FILESYSTEM_DISK=public

# تنظیمات ذخیره‌سازی
IMAGE_DISK=public
IMAGE_DIRECTORY=images/products

# تنظیمات بهینه‌سازی
IMAGE_WATERMARK_ENABLED=false
IMAGE_BACKUP_ENABLED=false
IMAGE_CACHE_DURATION=2592000

# --- شروع تنظیمات جدید JWT/JWE/JTI Blacklist ---
JWT_SECRET=ObUbJTbBjNbqhkmJYq6FhyAzJ1Ev9UIQxTp3xhs2hHzGMM6wtR5EGJpW9F5U21Wq

# تنظیمات عمومی JWT
JWT_ISSUER="${APP_NAME}"
JWT_AUDIENCE="${APP_URL}"
JWT_TTL=60 # زمان اعتبار Access Token در دقیقه (مطابق با config/jwt.php)
JWT_ALGORITHM=RS256 # الگوریتم امضای JWT (مطابق با config/jwt.php)

# مسیر کلیدهای JWK (برای الگوریتم‌های نامتقارن مانند RSA)
# 🔴 این خطوط حذف یا کامنت شده‌اند تا config/jwt.php از storage_path() استفاده کند.
# JWT_PUBLIC_KEY_PATH=storage/keys/public.pem
# JWT_PRIVATE_KEY_PATH=storage/keys/private.pem
JWT_PASSPHRASE=null # رمز عبور برای کلید خصوصی (اگر وجود دارد)، در غیر این صورت null

# تنظیمات JWE (JSON Web Encryption)
JWE_ALGORITHM=RSA-OAEP-256 # الگوریتم رمزگذاری کلید JWE (مطابق با config/jwt.php)
JWE_ENCRYPTION=A256GCM # الگوریتم رمزگذاری محتوای JWE (مطابق با config/jwt.php)
JWE_ENABLED=true # فعال/غیرفعال کردن رمزگذاری JWE (مطابق با config/jwt.php)

# تنظیمات JTI Blacklist
JWT_BLACKLIST_ENABLED=true # فعال/غیرفعال کردن لیست سیاه JTI (مطابق با config/jwt.php)
JWT_BLACKLIST_CACHE_STORE=redis # درایور کش برای لیست سیاه JTI (مثلاً redis یا file)
JWT_BLACKLIST_PREFIX=jti_blacklist: # پیشوند کلیدهای کش JTI (مطابق با config/jwt.php)
JWT_BLACKLIST_GRACE_PERIOD=0 # دوره مهلت برای لیست سیاه در ثانیه (مطابق با config/jwt.php)
JWT_SHOW_BLACKLIST_EXCEPTION=true # نمایش خطای خاص برای توکن‌های لیست سیاه (مطابق با config/jwt.php)

# تنظیمات امنیتی توکن
JWT_REQUIRE_JTI=true # آیا JTI در توکن الزامی است؟
JWT_REQUIRE_IAT=true # آیا IAT (زمان صدور) در توکن الزامی است؟
JWT_REQUIRE_EXP=true # آیا EXP (زمان انقضا) در توکن الزامی است؟
JWT_REQUIRE_NBF=false # آیا NBF (نه قبل از) در توکن الزامی است؟
JWT_CLOCK_SKEW=0 # مهلت زمانی برای جبران اختلاف ساعت سرورها در ثانیه (مطابق با config/jwt.php)

# تنظیمات Refresh Token
JWT_REFRESH_ENABLED=true # فعال/غیرفعال کردن Refresh Token (مطابق با config/jwt.php)
JWT_REFRESH_TTL=10080 # زمان اعتبار Refresh Token در دقیقه (مطابق با config/jwt.php)
JWT_REFRESH_GRACE_PERIOD=300 # دوره مهلت برای لیست سیاه Refresh Token در ثانیه (مطابق با config/jwt.php)
# --- پایان تنظیمات جدید JWT/JWE/JTI Blacklist ---
